{
  "attributes": {
    "dataSource.vendor": "Cloudflare",
    "dataSource.category": "security",
    "metadata.product.vendor_name": "Cloudflare",
    "metadata.version": "1.5.0"
  },
  "formats": [
    {
      "format": "$unmapped.{parse=gron}$",
      "rewrites": [
        { "input": "unmapped.CreatedAt", "output": "timestamp", "match": ".*", "replace": "$0" },
        { "input": "unmapped.Datetime",  "output": "timestamp", "match": ".*", "replace": "$0" },
        { "input": "unmapped.Timestamp", "output": "timestamp", "match": ".*", "replace": "$0" },
        { "input": "unmapped.When",      "output": "timestamp", "match": ".*", "replace": "$0" }
      ]
    }
  ],
  "mappings": {
    "version": 1,
    "mappings": [

      /* ─────────────────────────── HTTP Requests / WAF (put FIRST) ─────────────────────────── */
      {
        "predicate": "unmapped.WAFAttackScore = *",
        "transformations": [
          { "constant": { "field": "dataSource.name",       "value": "Cloudflare WAF" } },
          { "constant": { "field": "metadata.product.name", "value": "Cloudflare WAF" } },
          { "constant": { "field": "category_uid",  "value": 6 } },
          { "constant": { "field": "category_name", "value": "Threat Detection" } },
          { "constant": { "field": "class_uid",     "value": 6003 } },
          { "constant": { "field": "class_name",    "value": "Application Attack Detection" } },
          { "constant": { "field": "activity_id",   "value": 1 } },
          { "constant": { "field": "activity_name", "value": "Detect" } },
          { "constant": { "field": "type_uid",      "value": 600301 } },
          { "constant": { "field": "type_name",     "value": "App Attack: Detect" } },

          /* status / severity */
          { "constant": { "field": "status_id",   "value": 2, "predicate": "unmapped.EdgeResponseStatus >= 400" } },
          { "constant": { "field": "status_id",   "value": 1, "predicate": "unmapped.EdgeResponseStatus < 400" } },
          { "constant": { "field": "severity_id", "value": 3, "predicate": "unmapped.WAFAttackScore >= 90" } },
          { "constant": { "field": "severity_id", "value": 2, "predicate": "unmapped.WAFAttackScore >= 70 and unmapped.WAFAttackScore < 90" } },
          { "constant": { "field": "severity_id", "value": 1, "predicate": "unmapped.WAFAttackScore < 70" } },
          { "constant": { "field": "severity_id", "value": 99, "predicate": "not (severity_id = *)" } },

          /* WAF & bot */
          { "rename": { "from": "unmapped.WAFAttackScore",   "to": "waf.attack_score" } },
          { "rename": { "from": "unmapped.WAFRCEAttackScore","to": "waf.rce_score" } },
          { "rename": { "from": "unmapped.WAFSQLiAttackScore","to": "waf.sqli_score" } },
          { "rename": { "from": "unmapped.WAFXSSAttackScore","to": "waf.xss_score" } },
          { "rename": { "from": "unmapped.WAFFlags",         "to": "waf.flags" } },
          { "rename": { "from": "unmapped.BotScore",         "to": "signal.bot.score" } },
          { "rename": { "from": "unmapped.BotScoreSrc",      "to": "signal.bot.score_src" } },
          { "rename": { "from": "unmapped.BotDetectionIDs",  "to": "signal.bot.detection_ids" } },
          { "rename": { "from": "unmapped.BotDetectionTags", "to": "signal.bot.detection_tags" } },
          { "rename": { "from": "unmapped.BotTags",          "to": "signal.bot.tags" } },
          { "rename": { "from": "unmapped.VerifiedBotCategory","to": "signal.bot.category" } },

          /* JA3 / JA4 */
          { "rename": { "from": "unmapped.JA3Hash", "to": "network.tls.ja3" } },
          { "rename": { "from": "unmapped.JA4",     "to": "network.tls.ja4" } },

          /* TLS */
          { "rename": { "from": "unmapped.ClientSSLCipher",   "to": "network.tls.cipher" } },
          { "rename": { "from": "unmapped.ClientSSLProtocol", "to": "network.tls.version" } },

          /* source endpoint & geo */
          { "rename": { "from": "unmapped.ClientIP",          "to": "src_endpoint.ip" } },
          { "rename": { "from": "unmapped.ClientSrcPort",     "to": "src_endpoint.port" } },
          { "rename": { "from": "unmapped.ClientTCPRTTMs",    "to": "src_endpoint.tcp_rtt_ms" } },
          { "rename": { "from": "unmapped.ClientCountry",     "to": "src_endpoint.location.country_iso" } },
          { "rename": { "from": "unmapped.ClientCity",        "to": "src_endpoint.location.city_name" } },
          { "rename": { "from": "unmapped.ClientRegionCode",  "to": "src_endpoint.location.region_iso" } },
          { "rename": { "from": "unmapped.ClientLatitude",    "to": "src_endpoint.location.lat" } },
          { "rename": { "from": "unmapped.ClientLongitude",   "to": "src_endpoint.location.lon" } },
          { "rename": { "from": "unmapped.ClientASN",         "to": "src_endpoint.asn" } },
          { "rename": { "from": "unmapped.ClientASNDescription","to": "src_endpoint.as_org" } },
          { "rename": { "from": "unmapped.ClientDeviceType",  "to": "src_endpoint.device_type" } },
          { "rename": { "from": "unmapped.ClientIPClass",     "to": "src_endpoint.ip_class" } },

          /* destination / edge */
          { "rename": { "from": "unmapped.EdgeServerIP", "to": "dst_endpoint.ip" } },
          { "rename": { "from": "unmapped.EdgeColoCode", "to": "network.cloud.region" } },
          { "rename": { "from": "unmapped.EdgeColoID",   "to": "network.cloud.region_id" } },

          /* request */
          { "rename": { "from": "unmapped.ClientRequestHost",     "to": "http_request.url.hostname" } },
          { "rename": { "from": "unmapped.ClientRequestPath",     "to": "http_request.url.path" } },
          { "rename": { "from": "unmapped.ClientRequestQuery",    "to": "http_request.url.query" } },
          { "rename": { "from": "unmapped.ClientRequestScheme",   "to": "http_request.url.scheme" } },
          { "rename": { "from": "unmapped.ClientRequestMethod",   "to": "http_request.http_method" } },
          { "rename": { "from": "unmapped.ClientRequestProtocol", "to": "http_request.version" } },
          { "rename": { "from": "unmapped.ClientRequestUserAgent","to": "http_request.user_agent" } },
          { "rename": { "from": "unmapped.ClientRequestReferer",  "to": "http_request.referrer" } },
          { "rename": { "from": "unmapped.ClientRequestBytes",    "to": "http_request.size" } },

          /* response */
          { "rename": { "from": "unmapped.EdgeResponseStatus",   "to": "http_response.code" } },
          { "rename": { "from": "unmapped.EdgeResponseBytes",    "to": "http_response.bytes" } },
          { "rename": { "from": "unmapped.EdgeResponseBodyBytes","to": "http_response.body_bytes" } },
          { "rename": { "from": "unmapped.CacheResponseBytes",   "to": "http_response.cache_bytes" } },
          { "rename": { "from": "unmapped.EdgeResponseContentType","to": "http_response.mime_type" } },
          { "rename": { "from": "unmapped.EdgeResponseCompressionRatio","to": "http_response.compression_ratio" } },
          { "rename": { "from": "unmapped.EdgeTimeToFirstByteMs","to": "http_response.ttfb_ms" } },

          /* cache */
          { "rename": { "from": "unmapped.CacheCacheStatus", "to": "web.cache.status" } },
          { "rename": { "from": "unmapped.CacheTieredFill",  "to": "web.cache.tiered_fill" } },
          { "rename": { "from": "unmapped.CacheReserveUsed", "to": "web.cache.reserve_used" } },

          /* Ray / trace */
          { "rename": { "from": "unmapped.RayID",       "to": "http_request.id" } },
          { "rename": { "from": "unmapped.ParentRayID", "to": "http_request.parent_id" } },

          /* Cloudflare zone */
          { "rename": { "from": "unmapped.ZoneName", "to": "network.cloud.zone" } },

          /* timestamp */
          { "rename": { "from": "unmapped.EdgeEndTimestamp", "to": "time" } },
          { "cast":   { "field": "time", "type": "iso8601TimestampToEpochSec" } }
        ]
      },
      {
        "predicate": "aws contains 'gateway-http'",
        "transformations": [
          { "constant": { "value": "Gateway HTTP", "field": "dataSource.name" } },
          { "constant": { "value": "Gateway HTTP", "field": "metadata.product.name" } },
          { "constant": { "value": 4002, "field": "class_uid" } },
          { "constant": { "value": 4, "field": "category_uid" } },
          { "constant": { "value": "HTTP Activity", "field": "class_name" } },
          { "constant": { "value": "Network Activity", "field": "category_name" } },
          { "constant": { "value": 99, "field": "activity_id" } },
          { "copy": { "from": "unmapped.Action", "to": "activity_name" } },
          { "constant": { "value": 400299, "field": "type_uid" } },
          { "constant": { "value": 99, "field": "severity_id" } },
          { "rename": { "from": "unmapped.HTTPHost", "to": "http_request.url.hostname" } },
          { "rename": { "from": "unmapped.URL", "to": "http_request.url.url_string" } },
          { "rename": { "from": "unmapped.HTTPMethod", "to": "http_request.http_method" } },
          { "rename": { "from": "unmapped.HTTPVersion", "to": "http_request.version" } },
          { "rename": { "from": "unmapped.HTTPStatusCode", "to": "http_response.code" } },
          { "rename": { "from": "unmapped.SourceIP", "to": "src_endpoint.ip" } },
          { "rename": { "from": "unmapped.SourcePort", "to": "src_endpoint.port" } },
          { "rename": { "from": "unmapped.DeviceID", "to": "src_endpoint.uid" } },
          { "rename": { "from": "unmapped.DeviceName", "to": "src_endpoint.name" } },
          { "rename": { "from": "unmapped.DestinationIP", "to": "dst_endpoint.ip" } },
          { "rename": { "from": "unmapped.DestinationPort", "to": "dst_endpoint.port" } },
          { "rename": { "from": "unmapped.Datetime", "to": "time" } },
          { "cast": { "field": "time", "type": "iso8601TimestampToEpochSec" } },
          { "constant": { "value": "Host", "field": "metadata.profiles[0]" } },
          { "rename": { "from": "unmapped.Email", "to": "actor.user.email_addr" } },
          { "copy": { "from": "actor.user.email_addr", "to": "actor.user.name" } },
          { "replace": { "field": "actor.user.name", "regexp": "(.*?)@(.*)", "replacement": "$1" } },
          { "copy": { "from": "actor.user.email_addr", "to": "actor.user.domain" } },
          { "replace": { "field": "actor.user.domain", "regexp": "(.*?)@(.*)", "replacement": "$2" } },
          { "rename": { "from": "unmapped.UserID", "to": "actor.user.uid" } }
        ]
      },
      {
        "predicate": "aws contains 'gateway-network'",
        "transformations": [
          { "constant": { "value": "Gateway Network", "field": "dataSource.name" } },
          { "constant": { "value": "Gateway Network", "field": "metadata.product.name" } },
          { "constant": { "value": 4001, "field": "class_uid" } },
          { "constant": { "value": 4, "field": "category_uid" } },
          { "constant": { "value": "Network Activity", "field": "class_name" } },
          { "constant": { "value": "Network Activity", "field": "category_name" } },
          { "constant": { "value": 99, "field": "activity_id" } },
          { "copy": { "from": "unmapped.Action", "to": "activity_name" } },
          { "constant": { "value": 400199, "field": "type_uid" } },
          { "constant": { "value": 99, "field": "severity_id" } },
          { "rename": { "from": "unmapped.SourceIP", "to": "src_endpoint.ip" } },
          { "rename": { "from": "unmapped.SourcePort", "to": "src_endpoint.port" } },
          { "rename": { "from": "unmapped.DeviceID", "to": "src_endpoint.uid" } },
          { "rename": { "from": "unmapped.DeviceName", "to": "src_endpoint.name" } },
          { "rename": { "from": "unmapped.DestinationIP", "to": "dst_endpoint.ip" } },
          { "rename": { "from": "unmapped.DestinationPort", "to": "dst_endpoint.port" } },
          { "rename": { "from": "unmapped.Datetime", "to": "time" } },
          { "cast": { "field": "time", "type": "iso8601TimestampToEpochSec" } },
          { "constant": { "value": "Host", "field": "metadata.profiles[0]" } },
          { "rename": { "from": "unmapped.Email", "to": "actor.user.email_addr" } },
          { "copy": { "from": "actor.user.email_addr", "to": "actor.user.name" } },
          { "replace": { "field": "actor.user.name", "regexp": "(.*?)@(.*)", "replacement": "$1" } },
          { "copy": { "from": "actor.user.email_addr", "to": "actor.user.domain" } },
          { "replace": { "field": "actor.user.domain", "regexp": "(.*?)@(.*)", "replacement": "$2" } },
          { "rename": { "from": "unmapped.UserID", "to": "actor.user.uid" } }
        ]
      },
      {
        "predicate": "aws contains 'device-posture'",
        "transformations": [
          { "constant": { "value": "Device Posture", "field": "dataSource.name" } },
          { "constant": { "value": "Device Posture", "field": "metadata.product.name" } },
          { "constant": { "value": 5001, "field": "class_uid" } },
          { "constant": { "value": 5, "field": "category_uid" } },
          { "constant": { "value": "Device Inventory Info", "field": "class_name" } },
          { "constant": { "value": "Discovery", "field": "category_name" } },
          { "constant": { "value": 2, "field": "activity_id" } },
          { "constant": { "value": "Collect", "field": "activity_name" } },
          { "constant": { "value": 500102, "field": "type_uid" } },
          { "constant": { "value": "Device Inventory Info: Collect", "field": "type_name" } },
          { "constant": { "value": 99, "field": "severity_id" } },
          { "rename": { "from": "unmapped.Timestamp", "to": "time" } },
          { "cast": { "field": "time", "type": "iso8601TimestampToEpochSec" } },
          { "rename": { "from": "unmapped.DeviceID", "to": "device.uid" } },
          { "rename": { "from": "unmapped.DeviceName", "to": "device.name" } },
          { "rename": { "from": "unmapped.DeviceManufacturer", "to": "device.manufacturer" } },
          { "rename": { "from": "unmapped.DeviceModel", "to": "device.model" } },
          { "rename": { "from": "unmapped.DeviceSerialNumber", "to": "device.hw_info.serial_number" } },
          { "rename": { "from": "unmapped.DeviceType", "to": "device.os.type" } },
          { "rename": { "from": "unmapped.OSVersion", "to": "device.os.version" } },
          { "rename": { "from": "unmapped.Email", "to": "device.owner.email_addr" } },
          { "copy": { "from": "device.owner.email_addr", "to": "device.owner.name" } },
          { "replace": { "field": "device.owner.name", "regexp": "(.*?)@(.*)", "replacement": "$1" } },
          { "copy": { "from": "device.owner.email_addr", "to": "device.owner.domain" } },
          { "replace": { "field": "device.owner.domain", "regexp": "(.*?)@(.*)", "replacement": "$2" } },
          { "replace": { "field": "device.owner.name", "regexp": "(.*?)@.*", "replacement": "$1" } },
          { "constant": { "value": 100, "field": "device.os.type_id", "predicate": "device.os.type = 'windows'" } },
          { "constant": { "value": 300, "field": "device.os.type_id", "predicate": "device.os.type = 'mac'" } },
          { "constant": { "value": 301, "field": "device.os.type_id", "predicate": "device.os.type = 'ios'" } }
        ]
      },
      {
        "predicate": "aws contains 'gateway-dns'",
        "transformations": [
          { "constant": { "value": "Gateway DNS", "field": "dataSource.name" } },
          { "constant": { "value": "Gateway DNS", "field": "metadata.product.name" } },
          { "constant": { "value": 4003, "field": "class_uid" } },
          { "constant": { "value": 4, "field": "category_uid" } },
          { "constant": { "value": "DNS Activity", "field": "class_name" } },
          { "constant": { "value": "Network Activity", "field": "category_name" } },
          { "constant": { "value": 1, "field": "activity_id" } },
          { "constant": { "value": "Query", "field": "activity_name" } },
          { "constant": { "value": 400301, "field": "type_uid" } },
          { "constant": { "value": 99, "field": "severity_id" } },
          { "rename": { "from": "unmapped.SrcIP", "to": "src_endpoint.ip" } },
          { "rename": { "from": "unmapped.SrcPort", "to": "src_endpoint.port" } },
          { "rename": { "from": "unmapped.DeviceID", "to": "src_endpoint.uid" } },
          { "rename": { "from": "unmapped.DeviceName", "to": "src_endpoint.name" } },
          { "rename": { "from": "unmapped.DstIP", "to": "dst_endpoint.ip" } },
          { "rename": { "from": "unmapped.DstPort", "to": "dst_endpoint.port" } },
          { "rename": { "from": "unmapped.Datetime", "to": "time" } },
          { "cast": { "field": "time", "type": "iso8601TimestampToEpochSec" } },
          { "rename": { "from": "unmapped.RCode", "to": "rcode_id" } },
          { "rename": { "from": "unmapped.QueryName", "to": "query.hostname" } },
          { "rename": { "from": "unmapped.QueryTypeName", "to": "query.type" } },
          { "rename_tree": { "from": "unmapped.RData", "to": "answers" } },
          { "rename": { "from": "answers[*].data", "to": "answers[*].rdata" } },
          { "constant": { "value": "Host", "field": "metadata.profiles[0]" } },
          { "rename": { "from": "unmapped.Email", "to": "actor.user.email_addr" } },
          { "copy": { "from": "actor.user.email_addr", "to": "actor.user.name" } },
          { "replace": { "field": "actor.user.name", "regexp": "(.*?)@(.*)", "replacement": "$1" } },
          { "copy": { "from": "actor.user.email_addr", "to": "actor.user.domain" } },
          { "replace": { "field": "actor.user.domain", "regexp": "(.*?)@(.*)", "replacement": "$2" } },
          { "rename": { "from": "unmapped.UserID", "to": "actor.user.uid" } }
        ]
      },
      {
        "predicate": "aws contains 'audit-logs'",
        "transformations": [
          { "constant": { "value": "Audit Logs", "field": "dataSource.name" } },
          { "constant": { "value": "Audit Logs", "field": "metadata.product.name" } },
          { "constant": { "value": 3004, "field": "class_uid" } },
          { "constant": { "value": 3, "field": "category_uid" } },
          { "constant": { "value": "Entity Management", "field": "class_name" } },
          { "constant": { "value": "Identity & Access Management", "field": "category_name" } },
          { "constant": { "value": 3, "field": "activity_id", "predicate": "unmapped.ActionType contains 'update'" } },
          { "constant": { "value": "Update", "field": "activity_name", "predicate": "unmapped.ActionType contains 'update'" } },
          { "constant": { "value": 300403, "field": "type_uid", "predicate": "unmapped.ActionType contains 'update'" } },
          { "constant": { "value": "Entity Management: Update", "field": "type_name", "predicate": "unmapped.ActionType contains 'update'" } },
          { "constant": { "value": 1, "field": "activity_id", "predicate": "unmapped.ActionType contains 'create'" } },
          { "constant": { "value": "Create", "field": "activity_name", "predicate": "unmapped.ActionType contains 'create'" } },
          { "constant": { "value": 300401, "field": "type_uid", "predicate": "unmapped.ActionType contains 'create'" } },
          { "constant": { "value": "Entity Management: Create", "field": "type_name", "predicate": "unmapped.ActionType contains 'create'" } },
          { "constant": { "value": 4, "field": "activity_id", "predicate": "unmapped.ActionType contains 'delete'" } },
          { "constant": { "value": "Delete", "field": "activity_name", "predicate": "unmapped.ActionType contains 'delete'" } },
          { "constant": { "value": 300404, "field": "type_uid", "predicate": "unmapped.ActionType contains 'delete'" } },
          { "constant": { "value": "Entity Management: Delete", "field": "type_name", "predicate": "unmapped.ActionType contains 'delete'" } },
          { "constant": { "value": 12, "field": "activity_id", "predicate": "unmapped.ActionType contains 'revoke'" } },
          { "constant": { "value": "Suspend", "field": "activity_name", "predicate": "unmapped.ActionType contains 'revoke'" } },
          { "constant": { "value": 300412, "field": "type_uid", "predicate": "unmapped.ActionType contains 'revoke'" } },
          { "constant": { "value": "Entity Management: Suspend", "field": "type_name", "predicate": "unmapped.ActionType contains 'revoke'" } },
          { "constant": { "value": 99, "field": "activity_id", "predicate": "not (activity_id = *)" } },
          { "copy": { "from": "unmapped.ActionType", "to": "activity_name", "predicate": "not (activity_name = *)" } },
          { "constant": { "value": 300499, "field": "type_uid", "predicate": "not (type_uid = *)" } },
          { "constant": { "value": "Entity Management: Other", "field": "type_name", "predicate": "not (type_name = *)" } },
          { "constant": { "value": 1, "field": "status_id", "predicate": "unmapped.Allowed = true" } },
          { "constant": { "value": 2, "field": "status_id", "predicate": "unmapped.Allowed = false" } },
          { "constant": { "value": 99, "field": "severity_id" } },
          { "rename": { "from": "unmapped.Email", "to": "actor.user.email_addr" } },
          { "copy": { "from": "actor.user.email_addr", "to": "actor.user.name" } },
          { "replace": { "field": "actor.user.name", "regexp": "(.*?)@(.*)", "replacement": "$1" } },
          { "copy": { "from": "actor.user.email_addr", "to": "actor.user.domain" } },
          { "replace": { "field": "actor.user.domain", "regexp": "(.*?)@(.*)", "replacement": "$2" } },
          { "rename": { "from": "unmapped.UserUID", "to": "actor.user.uid" } },
          { "rename": { "from": "unmapped.IPAddress", "to": "src_endpoint.ip" } },
          { "rename": { "from": "unmapped.When", "to": "time" } },
          { "cast": { "field": "time", "type": "iso8601TimestampToEpochSec" } },
          { "rename": { "from": "unmapped.ActorEmail", "to": "actor.user.email_addr" } },
          { "rename": { "from": "unmapped.ActorID", "to": "actor.user.uid" } },
          { "rename": { "from": "unmapped.ActorType", "to": "actor.user.type" } },
          { "rename": { "from": "unmapped.ActorIP", "to": "src_endpoint.ip" } }
        ]
      },
      {
        "predicate": "Kind = 'firewall'",
        "transformations": [
          { "constant": { "field": "dataSource.name", "value": "Firewall Managed" } },
          { "constant": { "field": "metadata.product.name", "value": "Firewall Managed" } },
          { "constant": { "field": "category_uid", "value": 6 } },
          { "constant": { "field": "category_name", "value": "Threat Detection" } },
          { "constant": { "field": "class_uid", "value": 6003 } },
          { "constant": { "field": "class_name", "value": "Application Attack Detection" } },
          { "constant": { "field": "activity_id", "value": 1 } },
          { "constant": { "field": "activity_name", "value": "Detect" } },
          { "constant": { "field": "type_uid", "value": 600301 } },
          { "constant": { "field": "type_name", "value": "App Attack: Detect" } },
          { "constant": { "field": "status_id", "value": 2, "predicate": "Action = 'block'" } },
          { "constant": { "field": "status_id", "value": 1, "predicate": "not (Action = 'block')" } },
          { "constant": { "field": "severity_id", "value": 3, "predicate": "WAFAttackScore >= 90" } },
          { "constant": { "field": "severity_id", "value": 2, "predicate": "WAFAttackScore >= 70 and WAFAttackScore < 90" } },
          { "constant": { "field": "severity_id", "value": 1, "predicate": "WAFAttackScore < 70" } },
          { "constant": { "field": "severity_id", "value": 99, "predicate": "not (severity_id = *)" } },
          { "rename": { "from": "RuleID", "to": "threat_rule.uid" } },
          { "rename": { "from": "Description", "to": "threat_rule.name" } },
          { "rename": { "from": "SecuritySources[0]", "to": "threat_rule.engine" } },
          { "rename": { "from": "ClientIP", "to": "src_endpoint.ip" } },
          { "rename": { "from": "ClientCountry", "to": "src_endpoint.location.country_iso" } },
          { "rename": { "from": "ClientASNDescription", "to": "src_endpoint.as_org" } },
          { "rename": { "from": "ClientASN", "to": "src_endpoint.asn" } },
          { "rename": { "from": "ClientCity", "to": "src_endpoint.location.city_name" } },
          { "rename": { "from": "ClientLatitude", "to": "src_endpoint.location.lat" } },
          { "rename": { "from": "ClientLongitude", "to": "src_endpoint.location.lon" } },
          { "rename": { "from": "ClientRegionCode", "to": "src_endpoint.location.region_iso" } },
          { "rename": { "from": "ClientDeviceType", "to": "src_endpoint.device_type" } },
          { "rename": { "from": "ClientSrcPort", "to": "src_endpoint.port" } },
          { "rename": { "from": "EdgeServerIP", "to": "dst_endpoint.ip" } },
          { "rename": { "from": "ClientRequestHost", "to": "http_request.url.hostname" } },
          { "rename": { "from": "ClientRequestPath", "to": "http_request.url.path" } },
          { "rename": { "from": "ClientRequestQuery", "to": "http_request.url.query" } },
          { "rename": { "from": "ClientRequestMethod", "to": "http_request.http_method" } },
          { "rename": { "from": "ClientRequestProtocol", "to": "http_request.version" } },
          { "rename": { "from": "ClientRequestUserAgent", "to": "http_request.user_agent" } },
          { "rename": { "from": "EdgeResponseStatus", "to": "http_response.code" } },
          { "rename": { "from": "Datetime", "to": "time" } },
          { "rename": { "from": "EdgeEndTimestamp", "to": "time", "predicate": "not (time = *)" } },
          { "cast": { "field": "time", "type": "iso8601TimestampToEpochSec" } }
        ]
      },
      {
        "predicate": "WAFAttackScore = *",
        "transformations": [
          { "constant": { "field": "dataSource.name", "value": "HTTP Requests (WAF)" } },
          { "constant": { "field": "metadata.product.name", "value": "HTTP Requests (WAF)" } },
          { "constant": { "field": "category_uid", "value": 6 } },
          { "constant": { "field": "category_name", "value": "Threat Detection" } },
          { "constant": { "field": "class_uid", "value": 6003 } },
          { "constant": { "field": "class_name", "value": "Application Attack Detection" } },
          { "constant": { "field": "activity_id", "value": 1 } },
          { "constant": { "field": "activity_name", "value": "Detect" } },
          { "constant": { "field": "type_uid", "value": 600301 } },
          { "constant": { "field": "type_name", "value": "App Attack: Detect" } },
          { "constant": { "field": "status_id", "value": 2, "predicate": "EdgeResponseStatus >= 400" } },
          { "constant": { "field": "status_id", "value": 1, "predicate": "EdgeResponseStatus < 400" } },
          { "constant": { "field": "severity_id", "value": 3, "predicate": "WAFAttackScore >= 90" } },
          { "constant": { "field": "severity_id", "value": 2, "predicate": "WAFAttackScore >= 70 and WAFAttackScore < 90" } },
          { "constant": { "field": "severity_id", "value": 1, "predicate": "WAFAttackScore < 70" } },
          { "constant": { "field": "severity_id", "value": 99, "predicate": "not (severity_id = *)" } },
          { "rename": { "from": "WAFAttackScore", "to": "waf.attack_score" } },
          { "rename": { "from": "BotScore", "to": "signal.bot.score" } },
          { "rename": { "from": "BotScoreSrc", "to": "signal.bot.score_src" } },
          { "rename": { "from": "BotDetectionIDs", "to": "signal.bot.detection_ids" } },
          { "rename": { "from": "BotDetectionTags", "to": "signal.bot.detection_tags" } },
          { "rename": { "from": "BotTags", "to": "signal.bot.tags" } },
          { "rename": { "from": "VerifiedBotCategory", "to": "signal.bot.category" } },
          { "rename": { "from": "WAFFlags", "to": "waf.flags" } },
          { "rename": { "from": "WAFRCEAttackScore", "to": "waf.rce_score" } },
          { "rename": { "from": "WAFSQLiAttackScore", "to": "waf.sqli_score" } },
          { "rename": { "from": "WAFXSSAttackScore", "to": "waf.xss_score" } },
          { "rename": { "from": "JA3Hash", "to": "network.tls.ja3" } },
          { "rename": { "from": "JA4", "to": "network.tls.ja4" } },
          { "rename": { "from": "ClientSSLCipher", "to": "network.tls.cipher" } },
          { "rename": { "from": "ClientSSLProtocol", "to": "network.tls.version" } },
          { "rename": { "from": "ClientIP", "to": "src_endpoint.ip" } },
          { "rename": { "from": "ClientCountry", "to": "src_endpoint.location.country_iso" } },
          { "rename": { "from": "ClientASN", "to": "src_endpoint.asn" } },
          { "rename": { "from": "ClientASNDescription", "to": "src_endpoint.as_org" } },
          { "rename": { "from": "ClientCity", "to": "src_endpoint.location.city_name" } },
          { "rename": { "from": "ClientLatitude", "to": "src_endpoint.location.lat" } },
          { "rename": { "from": "ClientLongitude", "to": "src_endpoint.location.lon" } },
          { "rename": { "from": "ClientRegionCode", "to": "src_endpoint.location.region_iso" } },
          { "rename": { "from": "ClientIPClass", "to": "src_endpoint.ip_class" } },
          { "rename": { "from": "ClientDeviceType", "to": "src_endpoint.device_type" } },
          { "rename": { "from": "ClientSrcPort", "to": "src_endpoint.port" } },
          { "rename": { "from": "ClientTCPRTTMs", "to": "src_endpoint.tcp_rtt_ms" } },
          { "rename": { "from": "EdgeServerIP", "to": "dst_endpoint.ip" } },
          { "rename": { "from": "ClientRequestHost", "to": "http_request.url.hostname" } },
          { "rename": { "from": "ClientRequestPath", "to": "http_request.url.path" } },
          { "rename": { "from": "ClientRequestQuery", "to": "http_request.url.query" } },
          { "rename": { "from": "ClientRequestMethod", "to": "http_request.http_method" } },
          { "rename": { "from": "ClientRequestProtocol", "to": "http_request.version" } },
          { "rename": { "from": "ClientRequestScheme", "to": "http_request.url.scheme" } },
          { "rename": { "from": "ClientRequestReferer", "to": "http_request.referrer" } },
          { "rename": { "from": "ClientRequestUserAgent", "to": "http_request.user_agent" } },
          { "rename": { "from": "ClientXRequestedWith", "to": "http_request.headers.x_requested_with" } },
          { "rename": { "from": "EdgeResponseStatus", "to": "http_response.code" } },
          { "rename": { "from": "EdgeResponseBodyBytes", "to": "http_response.body_bytes" } },
          { "rename": { "from": "EdgeResponseBytes", "to": "http_response.bytes" } },
          { "rename": { "from": "CacheResponseBytes", "to": "http_response.cache_bytes" } },
          { "rename": { "from": "EdgeResponseCompressionRatio", "to": "http_response.compression_ratio" } },
          { "rename": { "from": "EdgeResponseContentType", "to": "http_response.mime_type" } },
          { "rename": { "from": "EdgeTimeToFirstByteMs", "to": "http_response.ttfb_ms" } },
          { "rename": { "from": "CacheCacheStatus", "to": "web.cache.status" } },
          { "rename": { "from": "CacheTieredFill", "to": "web.cache.tiered_fill" } },
          { "rename": { "from": "CacheReserveUsed", "to": "web.cache.reserve_used" } },
          { "rename": { "from": "EdgeColoCode", "to": "network.cloud.region" } },
          { "rename": { "from": "EdgeColoID", "to": "network.cloud.region_id" } },
          { "rename": { "from": "ZoneName", "to": "network.cloud.zone" } },
          { "rename": { "from": "RayID", "to": "http_request.id" } },
          { "rename": { "from": "ParentRayID", "to": "http_request.parent_id" } },
          { "rename": { "from": "EdgeEndTimestamp", "to": "time" } },
          { "cast": { "field": "time", "type": "iso8601TimestampToEpochSec" } }
        ]
      }
    ]
  }
}
