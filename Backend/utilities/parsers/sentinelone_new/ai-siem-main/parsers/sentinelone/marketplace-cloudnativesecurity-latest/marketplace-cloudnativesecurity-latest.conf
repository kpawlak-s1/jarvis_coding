{
    attributes: {
      "dataSource.category": "security",
      "dataSource.name": "Cloud Native Security",
      "dataSource.vendor": "SentinelOne",
      "metadata.product.name": "Cloud Native Security",
      "metadata.product.vendor_name": "SentinelOne",
      "category_name": "Findings"
      "category_uid": 2,
      "metadata.version": "1.1.0"
    },
    formats: [
      {
        format: ".*${parse=dottedJson}$",
      },
    ],
    mappings: {
      version: 0,
      mappings: [
        {
          predicate: "eventSubType = 'CLOUD_MISCONFIGURATION' and isComplianceMappingPresent = false",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resources[0].uid", type: "string"}
            {inputs: ["eventDetails.resource.cloudProvider"], output: "cloud.provider", type: "string"}
            {inputs: ["eventDetails.resource.region"], output: "resources[0].region", type: "string"}
            {inputs: ["eventDetails.resource.resourceName"], output: "resources[0].name", type: "string"}
            {inputs: ["eventDetails.resource.resourceLink"], output: "unmapped.eventDetails.resource.resourceLink", type: "string"}
            {inputs: ["eventDetails.resource.resourceType"], output: "resources[0].type", type: "string"}
            {inputs: ["eventDetails.resource.resourceId"], output: "unmapped.eventDetails.resource.resourceId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resources[0].owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resources[0].owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.gcpProjectId"], output: "unmapped.eventDetails.resource.source.providerDetails.gcpProjectId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsAccountId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsOrganizationId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsOrganizationId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.gcpOrganizationId"], output: "unmapped.eventDetails.resource.source.providerDetails.gcpOrganizationId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Detection Finding", field: "class_name"}
            { value: 2004, field: "class_uid"}
            { value: "Detection Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200401, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Detection Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200403, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'CLOUD_MISCONFIGURATION' and isComplianceMappingPresent = true",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resource.uid", type: "string"}
            {inputs: ["eventDetails.resource.cloudProvider"], output: "cloud.provider", type: "string"}
            {inputs: ["eventDetails.resource.region"], output: "resource.region", type: "string"}
            {inputs: ["eventDetails.resource.resourceName"], output: "resource.name", type: "string"}
            {inputs: ["eventDetails.resource.resourceLink"], output: "unmapped.eventDetails.resource.resourceLink", type: "string"}
            {inputs: ["eventDetails.resource.resourceType"], output: "resource.type", type: "string"}
            {inputs: ["eventDetails.resource.resourceId"], output: "unmapped.eventDetails.resource.resourceId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resource.owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resource.owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.gcpProjectId"], output: "unmapped.eventDetails.resource.source.providerDetails.gcpProjectId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsAccountId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsOrganizationId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsOrganizationId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.gcpOrganizationId"], output: "unmapped.eventDetails.resource.source.providerDetails.gcpOrganizationId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
            {inputs: ["eventDetails.policy.complianceStandards"], output: "compliance.standards", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Compliance Finding", field: "class_name"}
            { value: 2003, field: "class_uid"}
            { value: "Compliance Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200301, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Compliance Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200303, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'OFFENSIVE_SECURITY' and isComplianceMappingPresent = false",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resources[0].uid", type: "string"}
            {inputs: ["eventDetails.resource.subdomain"], output: "evidences[0].dst_endpoint.domain", type: "string"}
            {inputs: ["eventDetails.resource.port"], output: "evidences[0].dst_endpoint.port", type: "string"}
            {inputs: ["eventDetails.resource.exploitCode"], output: "unmapped.eventDetails.resource.exploitCode", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resources[0].owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resources[0].owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.cloudflareAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.cloudflareAccountId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsAccountId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsOrganizationId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsOrganizationId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Detection Finding", field: "class_name"}
            { value: 2004, field: "class_uid"}
            { value: "Detection Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200401, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Detection Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200403, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'OFFENSIVE_SECURITY' and isComplianceMappingPresent = true",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resource.uid", type: "string"}
            {inputs: ["eventDetails.resource.subdomain"], output: "unmapped.eventDetails.resource.subdomain", type: "string"}
            {inputs: ["eventDetails.resource.port"], output: "unmapped.eventDetails.resource.port", type: "string"}
            {inputs: ["eventDetails.resource.exploitCode"], output: "unmapped.eventDetails.resource.exploitCode", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resource.owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resource.owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.cloudflareAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.cloudflareAccountId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsAccountId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsOrganizationId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsOrganizationId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
            {inputs: ["eventDetails.policy.complianceStandards"], output: "compliance.standards", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Compliance Finding", field: "class_name"}
            { value: 2003, field: "class_uid"}
            { value: "Compliance Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200301, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Compliance Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200303, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'IAC_SECURITY' and isComplianceMappingPresent = false",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resources[0].uid", type: "string"}
            {inputs: ["eventDetails.resource.resourceName"], output: "resources[0].name", type: "string"}
            {inputs: ["eventDetails.resource.repositoryName"], output: "unmapped.eventDetails.resource.repositoryName", type: "string"}
            {inputs: ["eventDetails.resource.repositoryBranch"], output: "unmapped.eventDetails.resource.repositoryBranch", type: "string"}
            {inputs: ["eventDetails.resource.fileName"], output: "evidences[0].file.name", type: "string"}
            {inputs: ["eventDetails.resource.lineNumber"], output: "unmapped.eventDetails.resource.lineNumber", type: "string"}
            {inputs: ["eventDetails.resource.committedBy"], output: "actor.user.name", type: "string"}
            {inputs: ["eventDetails.resource.fileUrl"], output: "evidences[0].file.path", type: "string"}
            {inputs: ["eventDetails.resource.sourceUrl"], output: "finding_info.src_url", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resources[0].owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resources[0].owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.githubAccountName"], output: "unmapped.eventDetails.resource.source.providerDetails.githubAccountName", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.githubAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.githubAccountId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Detection Finding", field: "class_name"}
            { value: 2004, field: "class_uid"}
            { value: "Detection Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200401, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Detection Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200403, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'IAC_SECURITY' and isComplianceMappingPresent = true",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resource.uid", type: "string"}
            {inputs: ["eventDetails.resource.resourceName"], output: "resource.name", type: "string"}
            {inputs: ["eventDetails.resource.repositoryName"], output: "unmapped.eventDetails.resource.repositoryName", type: "string"}
            {inputs: ["eventDetails.resource.repositoryBranch"], output: "unmapped.eventDetails.resource.repositoryBranch", type: "string"}
            {inputs: ["eventDetails.resource.fileName"], output: "unmapped.eventDetails.resource.fileName", type: "string"}
            {inputs: ["eventDetails.resource.lineNumber"], output: "unmapped.eventDetails.resource.lineNumber", type: "string"}
            {inputs: ["eventDetails.resource.committedBy"], output: "actor.user.name", type: "string"}
            {inputs: ["eventDetails.resource.fileUrl"], output: "unmapped.eventDetails.resource.fileUrl", type: "string"}
            {inputs: ["eventDetails.resource.sourceUrl"], output: "finding_info.src_url", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resource.owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resource.owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.githubAccountName"], output: "unmapped.eventDetails.resource.source.providerDetails.githubAccountName", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.githubAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.githubAccountId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
            {inputs: ["eventDetails.policy.complianceStandards"], output: "compliance.standards", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Compliance Finding", field: "class_name"}
            { value: 2003, field: "class_uid"}
            { value: "Compliance Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200301, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Compliance Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200303, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'SECERT_SCANNING' and isComplianceMappingPresent = false",
          renames: [
            {inputs: ["eventType"], output: "eventType", type: "string"}
            {inputs: ["eventSubType"], output: "event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "uid", type: "string"}
            {inputs: ["eventDetails.resource.secretType"], output: "eventDetails.resource.secretType", type: "string"}
            {inputs: ["eventDetails.resource.secretTitle"], output: "eventDetails.resource.secretTitle", type: "string"}
            {inputs: ["eventDetails.resource.secretVerifiable"], output: "eventDetails.resource.secretVerifiable", type: "string"}
            {inputs: ["eventDetails.resource.secretVerified"], output: "eventDetails.resource.secretVerified", type: "string"}
            {inputs: ["eventDetails.resource.secretLastVerifiedAt"], output: "eventDetails.resource.secretLastVerifiedAt", type: "string"}
            {inputs: ["eventDetails.resource.repositoryName"], output: "eventDetails.resource.repositoryName", type: "string"}
            {inputs: ["eventDetails.resource.repositoryBranch"], output: "eventDetails.resource.repositoryBranch", type: "string"}
            {inputs: ["eventDetails.resource.lineNumber"], output: "eventDetails.resource.lineNumber", type: "string"}
            {inputs: ["eventDetails.resource.fileName"], output: "name", type: "string"}
            {inputs: ["eventDetails.resource.fileUrl"], output: "path", type: "string"}
            {inputs: ["eventDetails.resource.sourceUrl"], output: "src_url", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.githubAccountName"], output: "eventDetails.resource.source.providerDetails.githubAccountName", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.githubAccountId"], output: "eventDetails.resource.source.providerDetails.githubAccountId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "eventDetails.policy.policyCode", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Detection Finding", field: "class_name"}
            { value: 2004, field: "class_uid"}
            { value: "Detection Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200401, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Detection Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200403, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'SECERT_SCANNING' and isComplianceMappingPresent = true",
          renames: [
            {inputs: ["eventType"], output: "eventType", type: "string"}
            {inputs: ["eventSubType"], output: "event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "uid", type: "string"}
            {inputs: ["eventDetails.resource.secretType"], output: "eventDetails.resource.secretType", type: "string"}
            {inputs: ["eventDetails.resource.secretTitle"], output: "eventDetails.resource.secretTitle", type: "string"}
            {inputs: ["eventDetails.resource.secretVerifiable"], output: "eventDetails.resource.secretVerifiable", type: "string"}
            {inputs: ["eventDetails.resource.secretVerified"], output: "eventDetails.resource.secretVerified", type: "string"}
            {inputs: ["eventDetails.resource.secretLastVerifiedAt"], output: "eventDetails.resource.secretLastVerifiedAt", type: "string"}
            {inputs: ["eventDetails.resource.repositoryName"], output: "eventDetails.resource.repositoryName", type: "string"}
            {inputs: ["eventDetails.resource.repositoryBranch"], output: "eventDetails.resource.repositoryBranch", type: "string"}
            {inputs: ["eventDetails.resource.lineNumber"], output: "eventDetails.resource.lineNumber", type: "string"}
            {inputs: ["eventDetails.resource.fileName"], output: "name", type: "string"}
            {inputs: ["eventDetails.resource.fileUrl"], output: "eventDetails.resource.fileUrl", type: "string"}
            {inputs: ["eventDetails.resource.sourceUrl"], output: "src_url", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.githubAccountName"], output: "eventDetails.resource.source.providerDetails.githubAccountName", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.githubAccountId"], output: "eventDetails.resource.source.providerDetails.githubAccountId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "eventDetails.policy.policyCode", type: "string"}
            {inputs: ["eventDetails.policy.complianceStandards"], output: "standards", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Compliance Finding", field: "class_name"}
            { value: 2003, field: "class_uid"}
            { value: "Compliance Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200301, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Compliance Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200303, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'CDR' and isComplianceMappingPresent = false",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resources[0].uid", type: "string"}
            {inputs: ["eventDetails.resource.resourceId"], output: "unmapped.eventDetails.resource.resourceId", type: "string"}
            {inputs: ["eventDetails.resource.resourceType"], output: "resources[0].type", type: "string"}
            {inputs: ["eventDetails.resource.region"], output: "resources[0].region", type: "string"}
            {inputs: ["eventDetails.resource.eventId"], output: "unmapped.eventDetails.resource.eventId", type: "string"}
            {inputs: ["eventDetails.resource.eventType"], output: "unmapped.eventDetails.resource.eventType", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resources[0].owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resources[0].owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsAccountId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsOrganizationId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsOrganizationId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.gcpProjectId"], output: "unmapped.eventDetails.resource.source.providerDetails.gcpProjectId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Detection Finding", field: "class_name"}
            { value: 2004, field: "class_uid"}
            { value: "Detection Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200401, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Detection Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200403, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'CDR' and isComplianceMappingPresent = true",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resource.uid", type: "string"}
            {inputs: ["eventDetails.resource.resourceId"], output: "unmapped.eventDetails.resource.resourceId", type: "string"}
            {inputs: ["eventDetails.resource.resourceType"], output: "resource.type", type: "string"}
            {inputs: ["eventDetails.resource.region"], output: "resource.region", type: "string"}
            {inputs: ["eventDetails.resource.eventId"], output: "unmapped.eventDetails.resource.eventId", type: "string"}
            {inputs: ["eventDetails.resource.eventType"], output: "unmapped.eventDetails.resource.eventType", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resource.owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resource.owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsAccountId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsAccountId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.awsOrganizationId"], output: "unmapped.eventDetails.resource.source.providerDetails.awsOrganizationId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.gcpProjectId"], output: "unmapped.eventDetails.resource.source.providerDetails.gcpProjectId", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
            {inputs: ["eventDetails.policy.complianceStandards"], output: "compliance.standards", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Compliance Finding", field: "class_name"}
            { value: 2003, field: "class_uid"}
            { value: "Compliance Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200301, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Compliance Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200303, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'KUBERNETES_MISCONFIGURATION' and isComplianceMappingPresent = false",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resources[0].uid", type: "string"}
            {inputs: ["eventDetails.resource.cloudProvider"], output: "cloud.provider", type: "string"}
            {inputs: ["eventDetails.resource.region"], output: "resources[0].region", type: "string"}
            {inputs: ["eventDetails.resource.resourceName"], output: "resources[0].name", type: "string"}
            {inputs: ["eventDetails.resource.resourceLink"], output: "unmapped.eventDetails.resource.resourceLink", type: "string"}
            {inputs: ["eventDetails.resource.resourceType"], output: "resources[0].type", type: "string"}
            {inputs: ["eventDetails.resource.resourceId"], output: "unmapped.eventDetails.resource.resourceId", type: "string"}
            {inputs: ["eventDetails.resource.kubernetesNamespace"], output: "unmapped.eventDetails.resource.kubernetesNamespace", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resources[0].owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resources[0].owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.gcpProjectId"], output: "unmapped.eventDetails.resource.source.providerDetails.gcpProjectId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.k8sClusterResourceId"], output: "unmapped.eventDetails.resource.source.providerDetails.k8sClusterResourceId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.k8sClusterName"], output: "unmapped.eventDetails.resource.source.providerDetails.k8sClusterName", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Detection Finding", field: "class_name"}
            { value: 2004, field: "class_uid"}
            { value: "Detection Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200401, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Detection Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200403, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'KUBERNETES_MISCONFIGURATION' and isComplianceMappingPresent = true",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resource.uid", type: "string"}
            {inputs: ["eventDetails.resource.cloudProvider"], output: "cloud.provider", type: "string"}
            {inputs: ["eventDetails.resource.region"], output: "resource.region", type: "string"}
            {inputs: ["eventDetails.resource.resourceName"], output: "resource.name", type: "string"}
            {inputs: ["eventDetails.resource.resourceLink"], output: "unmapped.eventDetails.resource.resourceLink", type: "string"}
            {inputs: ["eventDetails.resource.resourceType"], output: "resource.type", type: "string"}
            {inputs: ["eventDetails.resource.resourceId"], output: "unmapped.eventDetails.resource.resourceId", type: "string"}
            {inputs: ["eventDetails.resource.kubernetesNamespace"], output: "unmapped.eventDetails.resource.kubernetesNamespace", type: "string"}
            {inputs: ["eventDetails.resource.source.providerType"], output: "unmapped.eventDetails.resource.source.providerType", type: "string"}
            {inputs: ["eventDetails.resource.source.provider"], output: "unmapped.eventDetails.resource.source.provider", type: "string"}
            {inputs: ["eventDetails.resource.source.providerAccountId"], output: "resource.owner.account.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerOrganisationId"], output: "resource.owner.org.uid", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.gcpProjectId"], output: "unmapped.eventDetails.resource.source.providerDetails.gcpProjectId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.k8sClusterResourceId"], output: "unmapped.eventDetails.resource.source.providerDetails.k8sClusterResourceId", type: "string"}
            {inputs: ["eventDetails.resource.source.providerDetails.k8sClusterName"], output: "unmapped.eventDetails.resource.source.providerDetails.k8sClusterName", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
            {inputs: ["eventDetails.policy.complianceStandards"], output: "compliance.standards", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Compliance Finding", field: "class_name"}
            { value: 2003, field: "class_uid"}
            { value: "Compliance Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200301, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Compliance Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200303, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'VULNERABILITY_MANAGEMENT' and isComplianceMappingPresent = false",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resource.uid", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilitySeverity"], output: "vulnerabilities[0].severity", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityId"], output: "vulnerabilities[0].cve.uid", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityLink"], output: "vulnerabilities[0].cve.references[0]", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityFixedVersion"], output: "unmapped.eventDetails.resource.vulnerabilityFixedVersion", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityDescription"], output: "vulnerabilities[0].cve.desc", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityBaseScore"], output: "vulnerabilities[0].cve.cvss[0].base_score", type: "string"}
            {inputs: ["eventDetails.resource.epssScore"], output: "vulnerabilities[0].cve.epss.score", type: "string"}
            {inputs: ["eventDetails.resource.epssPercentile"], output: "vulnerabilities[0].cve.epss.percentile", type: "string"}
            {inputs: ["eventDetails.resource.hasCisaExploit"], output: "vulnerabilities[0].is_exploit_available", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Vulnerability Finding", field: "class_name"}
            { value: 2002, field: "class_uid"}
            { value: "Vulnerability Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200201, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Vulnerability Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200203, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        },
        {
          predicate: "eventSubType = 'VULNERABILITY_MANAGEMENT' and isComplianceMappingPresent = true",
          renames: [
            {inputs: ["eventType"], output: "unmapped.eventType", type: "string"}
            {inputs: ["eventSubType"], output: "metadata.event_code", type: "string"}
            {inputs: ["isComplianceMappingPresent"], output: "unmapped.isComplianceMappingPresent", type: "string"}
            {inputs: ["eventDetails.id"], output: "metadata.uid", type: "string"}
            {inputs: ["eventDetails.orgId"], output: "unmapped.eventDetails.orgId", type: "string"}
            {inputs: ["eventDetails.projectId"], output: "unmapped.eventDetails.projectId", type: "string"}
            {inputs: ["eventDetails.projectName"], output: "unmapped.eventDetails.projectName", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "metadata.original_time", type: "string"}
            {inputs: ["eventDetails.eventTime"], output: "timestamp", type: "string"}
            {inputs: ["eventDetails.issue.id"], output: "finding_info.uid", type: "string"}
            {inputs: ["eventDetails.issue.message"], output: "finding_info.title", type: "string"}
            {inputs: ["eventDetails.issue.severity"], output: "severity", type: "string"}
            {inputs: ["eventDetails.issue.module"], output: "unmapped.eventDetails.issue.module", type: "string"}
            {inputs: ["eventDetails.issue.description"], output: "finding_info.desc", type: "string"}
            {inputs: ["eventDetails.issue.recommendedAction"], output: "remediation.desc", type: "string"}
            {inputs: ["eventDetails.issue.impact"], output: "impact", type: "string"}
            {inputs: ["eventDetails.issue.infoLink"], output: "unmapped.eventDetails.issue.infoLink", type: "string"}
            {inputs: ["eventDetails.issue.issueLink"], output: "unmapped.eventDetails.issue.issueLink", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "resource.uid", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilitySeverity"], output: "unmapped.eventDetails.resource.vulnerabilitySeverity", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityId"], output: "unmapped.eventDetails.resource.vulnerabilityId", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityLink"], output: "unmapped.eventDetails.resource.vulnerabilityLink", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityFixedVersion"], output: "unmapped.eventDetails.resource.vulnerabilityFixedVersion", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityDescription"], output: "unmapped.eventDetails.resource.vulnerabilityDescription", type: "string"}
            {inputs: ["eventDetails.resource.vulnerabilityBaseScore"], output: "unmapped.eventDetails.resource.vulnerabilityBaseScore", type: "string"}
            {inputs: ["eventDetails.resource.epssScore"], output: "unmapped.eventDetails.resource.epssScore", type: "string"}
            {inputs: ["eventDetails.resource.epssPercentile"], output: "unmapped.eventDetails.resource.epssPercentile", type: "string"}
            {inputs: ["eventDetails.resource.hasCisaExploit"], output: "unmapped.eventDetails.resource.hasCisaExploit", type: "string"}
            {inputs: ["eventDetails.policy.id"], output: "finding_info.analytic.uid", type: "string"}
            {inputs: ["eventDetails.policy.policyTitle"], output: "finding_info.analytic.name", type: "string"}
            {inputs: ["eventDetails.policy.service"], output: "unmapped.eventDetails.policy.service", type: "string"}
            {inputs: ["eventDetails.policy.policyCode"], output: "unmapped.eventDetails.policy.policyCode", type: "string"}
            {inputs: ["eventDetails.policy.complianceStandards"], output: "compliance.standards", type: "string"}
          ],
          copies: [
            {inputs: ["eventDetails.issue.issueLink"], output: "observables[0].value", type: "string"}
            {inputs: ["eventDetails.resource.id"], output: "observables[1].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "finding_info.analytic.type_id"}
            { value: "Policy", field: "finding_info.analytic.type"}
            { value: "Create", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Create", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Close", field: "activity_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 3, field: "activity_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: "Close", field: "event.type", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 2, field: "severity_id", predicate: "severity = 'LOW'"}
            { value: 3, field: "severity_id", predicate: "severity = 'MEDIUM'"}
            { value: 4, field: "severity_id", predicate: "severity = 'HIGH'"}
            { value: 5, field: "severity_id", predicate: "severity = 'CRITICAL'"}
            { value: "New", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 1, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Resolved", field: "status", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 4, field: "status_id", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 6, field: "observables[0].type_id"}
            { value: "URL String", field: "observables[0].type"}
            { value: "unmapped.eventDetails.issue.issueLink", field: "observables[0].name"}
            { value: 10, field: "observables[1].type_id"}
            { value: "Resource UID", field: "observables[1].type"}
            { value: "resources[0].uid", field: "observables[1].name"}
            { value: "Vulnerability Finding", field: "class_name"}
            { value: 2002, field: "class_uid"}
            { value: "Vulnerability Finding: Create", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: 200201, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_OPEN'"}
            { value: "Vulnerability Finding: Close", field: "type_name", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
            { value: 200203, field: "type_uid", predicate: "unmapped.eventType = 'ISSUE_RESOURCE_RESOLVED'"}
          ]
        }
      ]
    }
  }
