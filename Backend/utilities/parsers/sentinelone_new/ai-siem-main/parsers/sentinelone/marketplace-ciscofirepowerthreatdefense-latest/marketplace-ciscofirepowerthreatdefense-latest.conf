{
    attributes: {
      "dataSource.category": "security",
      "dataSource.name": "Cisco Firepower Threat Defense",
      "dataSource.vendor": "Cisco",
      "metadata.product.vendor_name": "Cisco",
      "metadata.product.name": "Cisco Firepower Threat Defense",
      "metadata.version":"1.1.0",
      "severity_id": 0,
      "status_id": 0,
    },
    formats: [
      {
        format: "${parse=dottedJson}$",
      },
    ],
    mappings: {
      version: 0,
      mappings: [
        {
          predicate: "EventType='ConnectionEvent' or 'FileEvent' or 'IntrusionPacket'",
          copies: [
            { inputs: [ "EventType" ], output: "event.type", type: "string"},
            { inputs: [ "EventSecond" ], output: "time", type: "int"}
            { inputs: [ "InitiatorIP" ], output: "observables[0].value", type: "string"}
            { inputs: [ "ResponderIP" ], output: "observables[1].value", type: "string"}
            { inputs: [ "FileSHA256" ], output: "observables[2].value", type: "string"}
            { inputs: [ "NAT_InitiatorIP" ], output: "src_endpoint.intermediate_ips[0]", type: "string"}
            { inputs: [ "NAT_ResponderIP" ], output: "dst_endpoint.intermediate_ips[0]", type: "string"}
            { inputs: [ "EventSecond" ], output: "timestamp", type: "string"}
            { inputs: [ "EventSecond" ], output: "metadata.original_time", type: "string"}
          ],
          renames: [
            { inputs: [ "EventSecond" ], output: "metadata.original_time", type: "string"}
            { inputs: [ "EventType" ], output: "activity_name", type: "string"}
            { inputs: [ "FirstPacketSecond" ], output: "unmapped.FirstPacketSecond", type: "string"}
            { inputs: [ "DeviceUUID" ], output: "device.uid", type: "string"}
            { inputs: [ "InstanceID" ], output: "device.instance_uid", type: "string"}
            { inputs: [ "ConnectionID" ], output: "connection_info.uid", type: "string"}
            { inputs: [ "AC_RuleAction" ], output: "action", type: "string"}
            { inputs: [ "InitiatorIP" ], output: "dst_endpoint.ip", type: "string"}
            { inputs: [ "ResponderIP" ], output: "src_endpoint.ip", type: "string"}
            { inputs: [ "InitiatorPort" ], output: "dst_endpoint.port", type: "string"}
            { inputs: [ "ResponderPort" ], output: "src_endpoint.port", type: "string"}
            { inputs: [ "Protocol" ], output: "connection_info.protocol_name", type: "string"}
            { inputs: [ "IngressInterface" ], output: "unmapped.IngressInterface", type: "string"}
            { inputs: [ "EgressInterface" ], output: "unmapped.EgressInterface", type: "string"}
            { inputs: [ "IngressVRF" ], output: "unmapped.IngressVRF", type: "string"}
            { inputs: [ "EgressVRF" ], output: "unmapped.EgressVRF", type: "string"}
            { inputs: [ "FirewallPolicy" ], output: "unmapped.FirewallPolicy", type: "string"}
            { inputs: [ "FirewallRule" ], output: "firewall_rule.name", type: "string"}
            { inputs: [ "InitiatorPackets" ], output: "traffic.packets_out", type: "string"}
            { inputs: [ "ResponderPackets" ], output: "traffic.packets_in", type: "string"}
            { inputs: [ "InitiatorBytes" ], output: "traffic.bytes_out", type: "string"}
            { inputs: [ "ResponderBytes" ], output: "traffic.bytes_in", type: "string"}
            { inputs: [ "NAP_Policy" ], output: "unmapped.NAP_Policy", type: "string"}
            { inputs: [ "ClientAppDetector" ], output: "unmapped.ClientAppDetector", type: "string"}
            { inputs: [ "ConnectionDuration" ], output: "duration", type: "string"}
            { inputs: [ "LastPacketSecond" ], output: "unmapped.LastPacketSecond", type: "string"}
            { inputs: [ "ClientApplication" ], output: "unmapped.ClientApplication", type: "string"}
            { inputs: [ "Application" ], output: "app_name", type: "string"}
            { inputs: [ "SSL_Policy" ], output: "unmapped.SSL_Policy", type: "string"}
            { inputs: [ "SSL_FlowStatus" ], output: "unmapped.SSL_FlowStatus", type: "string"}
            { inputs: [ "SSL_CipherSuite" ], output: "tls.cipher", type: "string"}
            { inputs: [ "SSL_Version" ], output: "tls.version", type: "string"}
            { inputs: [ "SSL_ServerCertStatus" ], output: "unmapped.SSL_ServerCertStatus", type: "string"}
            { inputs: [ "SSL_ActualAction" ], output: "unmapped.SSL_ActualAction", type: "string"}
            { inputs: [ "URL" ], output: "url.url_string", type: "string"}
            { inputs: [ "WebApplication" ], output: "unmapped.WebApplication", type: "string"}
            { inputs: [ "SSL_ExpectedAction" ], output: "unmapped.SSL_ExpectedAction", type: "string"}
            { inputs: [ "EVE_ProcessConfidencePct" ], output: "unmapped.EVE_ProcessConfidencePct", type: "string"}
            { inputs: [ "EVE_Process" ], output: "unmapped.EVE_Process", type: "string"}
            { inputs: [ "EVE_ThreatConfidencePct" ], output: "unmapped.EVE_ThreatConfidencePct", type: "string"}
            { inputs: [ "EVE_ThreatConfidenceIndex" ], output: "unmapped.EVE_ThreatConfidenceIndex", type: "string"}
            { inputs: [ "DNS_Query" ], output: "unmapped.DNS_Query", type: "string"}
            { inputs: [ "DNS_RecordDescription" ], output: "unmapped.DNS_RecordDescription", type: "string"}
            { inputs: [ "DNS_ResponseType" ], output: "unmapped.DNS_ResponseType", type: "string"}
            { inputs: [ "DNS_TTL" ], output: "unmapped.DNS_TTL", type: "string"}
            { inputs: [ "ReferencedHost" ], output: "dst_endpoint.hostname", type: "string"}
            { inputs: [ "HTTP_Referer" ], output: "unmapped.HTTP_Referer", type: "string"}
            { inputs: [ "ClientApplicationVersion" ], output: "unmapped.ClientApplicationVersion", type: "string"}
            { inputs: [ "HTTP_Response" ], output: "api.response.code", type: "string"}
            { inputs: [ "FileAction" ], output: "unmapped.FileAction", type: "string"}
            { inputs: [ "FileDirection" ], output: "unmapped.FileDirection", type: "string"}
            { inputs: [ "FilePolicy" ], output: "unmapped.FilePolicy", type: "string"}
            { inputs: [ "FileSandboxStatus" ], output: "unmapped.FileSandboxStatus", type: "string"}
            { inputs: [ "FileSHA256" ], output: "actor.process.file.hashes[0].value", type: "string"}
            { inputs: [ "FileSize" ], output: "actor.process.file.size", type: "string"}
            { inputs: [ "FileName" ], output: "actor.process.file.name", type: "string"}
            { inputs: [ "FileStorageStatus" ], output: "unmapped.FileStorageStatus", type: "string"}
            { inputs: [ "FileType" ], output: "actor.process.file.type", type: "string"}
            { inputs: [ "SHA_Disposition" ], output: "unmapped.SHA_Disposition", type: "string"}
            { inputs: [ "SperoDisposition" ], output: "unmapped.SperoDisposition", type: "string"}
            { inputs: [ "URI" ], output: "actor.process.file.path", type: "string"}
            { inputs: [ "EventID" ], output: "metadata.uid", type: "string"}
            { inputs: [ "PacketData" ], output: "unmapped.PacketData", type: "string"}
            { inputs: [ "PacketLength" ], output: "unmapped.PacketLength", type: "string"}
            { inputs: [ "PacketLinkTypeID" ], output: "unmapped.PacketLinkTypeID", type: "string"}
            { inputs: [ "PacketMicrosecond" ], output: "unmapped.PacketMicrosecond", type: "string"}
            { inputs: [ "PacketSecond" ], output: "unmapped.PacketSecond", type: "string"}
            { inputs: [ "FirewallRuleList" ], output: "unmapped.FirewallRuleList", type: "string"}
            { inputs: [ "MonitorRule" ], output: "unmapped.MonitorRule", type: "string"}
            { inputs: [ "MonitorRuleID" ], output: "unmapped.MonitorRuleID", type: "string"}
            { inputs: [ "AC_RuleActionID" ], output: "unmapped.AC_RuleActionID", type: "string"}
            { inputs: [ "AC_RuleReason" ], output: "unmapped.AC_RuleReason", type: "string"}
            { inputs: [ "AC_RuleReasonID" ], output: "unmapped.AC_RuleReasonID", type: "string"}
            { inputs: [ "ApplicationID" ], output: "unmapped.ApplicationID", type: "string"}
            { inputs: [ "ApplicationProductivityIndex" ], output: "unmapped.ApplicationProductivityIndex", type: "string"}
            { inputs: [ "ApplicationProtocolNegotiations" ], output: "unmapped.ApplicationProtocolNegotiations", type: "string"}
            { inputs: [ "ApplicationRiskIndex" ], output: "unmapped.ApplicationRiskIndex", type: "string"}
            { inputs: [ "AuthenticationSource" ], output: "unmapped.AuthenticationSource", type: "string"}
            { inputs: [ "ClientAppDetectorID" ], output: "unmapped.ClientAppDetectorID", type: "string"}
            { inputs: [ "ClientApplicationProductivityIndex" ], output: "unmapped.ClientApplicationProductivityIndex", type: "string"}
            { inputs: [ "ClientApplicationRiskIndex" ], output: "unmapped.ClientApplicationRiskIndex", type: "string"}
            { inputs: [ "Context" ], output: "unmapped.Context", type: "string"}
            { inputs: [ "DestinationIP_DynamicAttribute" ], output: "unmapped.DestinationIP_DynamicAttribute", type: "string"}
            { inputs: [ "DestinationSecurityGroup" ], output: "unmapped.DestinationSecurityGroup", type: "string"}
            { inputs: [ "DeviceIP" ], output: "device.ip", type: "string"}
            { inputs: [ "DeviceSerialNumber" ], output: "unmapped.DeviceSerialNumber", type: "string"}
            { inputs: [ "DNS_RecordType" ], output: "unmapped.DNS_RecordType", type: "string"}
            { inputs: [ "DNS_RecordTypeID" ], output: "unmapped.DNS_RecordTypeID", type: "string"}
            { inputs: [ "DNS_ResponseType" ], output: "unmapped.DNS_ResponseType", type: "string"}
            { inputs: [ "DNS_ResponseTypeID" ], output: "unmapped.DNS_ResponseTypeID", type: "string"}
            { inputs: [ "DNS_Sinkhole" ], output: "unmapped.DNS_Sinkhole", type: "string"}
            { inputs: [ "DNS_SinkholeUUID" ], output: "unmapped.DNS_SinkholeUUID", type: "string"}
            { inputs: [ "DNS_TTL" ], output: "unmapped.DNS_TTL", type: "string"}
            { inputs: [ "Domain" ], output: "src_endpoint.domain", type: "string"}
            { inputs: [ "DynamicAttributes" ], output: "unmapped.DynamicAttributes", type: "string"}
            { inputs: [ "EgressInterfaceUUID" ], output: "unmapped.EgressInterfaceUUID", type: "string"}
            { inputs: [ "EgressZone" ], output: "unmapped.EgressZone", type: "string"}
            { inputs: [ "EgressZoneUUID" ], output: "unmapped.EgressZoneUUID", type: "string"}
            { inputs: [ "EndpointProfile" ], output: "unmapped.EndpointProfile", type: "string"}
            { inputs: [ "EndpointProfileID" ], output: "unmapped.EndpointProfileID", type: "string"}
            { inputs: [ "EVE_Fingerprint" ], output: "unmapped.EVE_Fingerprint", type: "string"}
            { inputs: [ "EventPriority" ], output: "severity", type: "string"}
            { inputs: [ "EventSubtype" ], output: "metadata.log_name", type: "string"}
            { inputs: [ "FileCount" ], output: "unmapped.FileCount", type: "string"}
            { inputs: [ "FirewallPolicyUUID" ], output: "unmapped.FirewallPolicyUUID", type: "string"}
            { inputs: [ "FirewallRuleID" ], output: "firewall_rule.uid", type: "string"}
            { inputs: [ "Hostname" ], output: "src_endpoint.hostname", type: "string"}
            { inputs: [ "ICMP_Code" ], output: "unmapped.ICMP_Code", type: "string"}
            { inputs: [ "ICMP_Type" ], output: "unmapped.ICMP_Type", type: "string"}
            { inputs: [ "IngressInterfaceUUID" ], output: "unmapped.IngressInterfaceUUID", type: "string"}
            { inputs: [ "IngressZone" ], output: "unmapped.IngressZone", type: "string"}
            { inputs: [ "IngressZoneUUID" ], output: "unmapped.IngressZoneUUID", type: "string"}
            { inputs: [ "InitiatorBytesDropped" ], output: "unmapped.InitiatorBytesDropped", type: "string"}
            { inputs: [ "InitiatorContinent" ], output: "unmapped.InitiatorContinent", type: "string"}
            { inputs: [ "InitiatorContinentCode" ], output: "unmapped.InitiatorContinentCode", type: "string"}
            { inputs: [ "InitiatorCountry" ], output: "src_endpoint.location.country", type: "string"}
            { inputs: [ "InitiatorCountryCode" ], output: "unmapped.InitiatorCountryCode", type: "string"}
            { inputs: [ "InitiatorCountryID" ], output: "unmapped.InitiatorCountryID", type: "string"}
            { inputs: [ "InitiatorPacketsDropped" ], output: "unmapped.InitiatorPacketsDropped", type: "string"}
            { inputs: [ "IntrusionCount" ], output: "unmapped.IntrusionCount", type: "string"}
            { inputs: [ "IOC_Count" ], output: "unmapped.IOC_Count", type: "string"}
            { inputs: [ "ManagerName" ], output: "actor.user.org.ou_name", type: "string"}
            { inputs: [ "ManagerUUID" ], output: "actor.user.org.ou_uid", type: "string"}
            { inputs: [ "MatchedRule" ], output: "unmapped.MatchedRule", type: "string"}
            { inputs: [ "NAP_PolicyUUID" ], output: "unmapped.NAP_PolicyUUID", type: "string"}
            { inputs: [ "NAT_InitiatorPort" ], output: "unmapped.NAT_InitiatorPort", type: "string"}
            { inputs: [ "NAT_ResponderPort" ], output: "unmapped.NAT_ResponderPort", type: "string"}
            { inputs: [ "NetflowDestinationAS" ], output: "unmapped.NetflowDestinationAS", type: "string"}
            { inputs: [ "NetflowDestinationTOS" ], output: "unmapped.NetflowDestinationTOS", type: "string"}
            { inputs: [ "NetflowSNMP_In" ], output: "unmapped.NetflowSNMP_In", type: "string"}
            { inputs: [ "NetflowSNMP_Out" ], output: "unmapped.NetflowSNMP_Out", type: "string"}
            { inputs: [ "NetflowSourceAS" ], output: "unmapped.NetflowSourceAS", type: "string"}
            { inputs: [ "NetflowSourceTOS" ], output: "unmapped.NetflowSourceTOS", type: "string"}
            { inputs: [ "NetmapID" ], output: "unmapped.NetmapID", type: "string"}
            { inputs: [ "OriginalInitiatorIP" ], output: "unmapped.OriginalInitiatorIP", type: "string"}
            { inputs: [ "PrefilterPolicy" ], output: "unmapped.PrefilterPolicy", type: "string"}
            { inputs: [ "ProtocolID" ], output: "unmapped.ProtocolID", type: "string"}
            { inputs: [ "QOS_AppliedInterface" ], output: "unmapped.QOS_AppliedInterface", type: "string"}
            { inputs: [ "QOS_Policy" ], output: "unmapped.QOS_Policy", type: "string"}
            { inputs: [ "QOS_Rule" ], output: "unmapped.QOS_Rule", type: "string"}
            { inputs: [ "QOS_RuleID" ], output: "unmapped.QOS_RuleID", type: "string"}
            { inputs: [ "RealmID" ], output: "unmapped.RealmID", type: "string"}
            { inputs: [ "ResponderBytesDropped" ], output: "unmapped.ResponderBytesDropped", type: "string"}
            { inputs: [ "ResponderContinent" ], output: "unmapped.ResponderContinent", type: "string"}
            { inputs: [ "ResponderContinentCode" ], output: "unmapped.ResponderContinentCode", type: "string"}
            { inputs: [ "ResponderCountry" ], output: "dst_endpoint.location.country", type: "string"}
            { inputs: [ "ResponderCountryCode" ], output: "unmapped.ResponderCountryCode", type: "string"}
            { inputs: [ "ResponderCountryID" ], output: "unmapped.ResponderCountryID", type: "string"}
            { inputs: [ "ResponderPacketsDropped" ], output: "unmapped.ResponderPacketsDropped", type: "string"}
            { inputs: [ "SecurityGroupID" ], output: "unmapped.SecurityGroupID", type: "string"}
            { inputs: [ "SensorID" ], output: "unmapped.SensorID", type: "string"}
            { inputs: [ "SI_Layer" ], output: "unmapped.SI_Layer", type: "string"}
            { inputs: [ "SourceIP_DynamicAttribute" ], output: "unmapped.SourceIP_DynamicAttribute", type: "string"}
            { inputs: [ "SourceSecurityGroupTagType" ], output: "unmapped.SourceSecurityGroupTagType", type: "string"}
            { inputs: [ "SSL_ActualActionID" ], output: "unmapped.SSL_ActualActionID", type: "string"}
            { inputs: [ "SSL_ActualActionID" ], output: "unmapped.SSL_ActualActionID", type: "string"}
            { inputs: [ "SSL_Cert" ], output: "unmapped.SSL_Cert", type: "string"}
            { inputs: [ "SSL_CertFingerprint" ], output: "unmapped.SSL_CertFingerprint", type: "string"}
            { inputs: [ "SSL_FlowError" ], output: "unmapped.SSL_FlowError", type: "string"}
            { inputs: [ "SSL_FlowMessages" ], output: "unmapped.SSL_FlowMessages", type: "string"}
            { inputs: [ "SSL_PolicyUUID" ], output: "unmapped.SSL_PolicyUUID", type: "string"}
            { inputs: [ "SSL_Rule" ], output: "unmapped.SSL_Rule", type: "string"}
            { inputs: [ "SSL_RuleID" ], output: "unmapped.SSL_RuleID", type: "string"}
            { inputs: [ "SSL_SessionID" ], output: "unmapped.SSL_SessionID", type: "string"}
            { inputs: [ "SSL_TicketID" ], output: "unmapped.SSL_TicketID", type: "string"}
            { inputs: [ "SSL_URL_Category" ], output: "unmapped.SSL_URL_Category", type: "string"}
            { inputs: [ "SSL_VersionID" ], output: "unmapped.SSL_VersionID", type: "string"}
            { inputs: [ "TCP_Flags" ], output: "unmapped.TCP_Flags", type: "string"}
            { inputs: [ "TunnelRule" ], output: "unmapped.TunnelRule", type: "string"}
            { inputs: [ "TunnelRuleID" ], output: "unmapped.TunnelRuleID", type: "string"}
            { inputs: [ "URL_Category" ], output: "unmapped.URL_Category", type: "string"}
            { inputs: [ "URL_CategoryID" ], output: "unmapped.URL_CategoryID", type: "string"}
            { inputs: [ "URL_Reputation" ], output: "unmapped.URL_Reputation", type: "string"}
            { inputs: [ "URL_ReputationLevel" ], output: "unmapped.URL_Reputation", type: "string"}
            { inputs: [ "UserAgent" ], output: "unmapped.UserAgent", type: "string"}
            { inputs: [ "UserID" ], output: "actor.user.uid", type: "string"}
            { inputs: [ "UserName" ], output: "actor.user.name", type: "string"}
            { inputs: [ "UserProtocol" ], output: "unmapped.UserProtocol", type: "string"}
            { inputs: [ "VLAN_ID" ], output: "unmapped.VLAN_ID", type: "string"}
            { inputs: [ "WebApplicationHTTP" ], output: "unmapped.WebApplicationHTTP", type: "string"}
            { inputs: [ "WebApplicationID" ], output: "unmapped.WebApplicationID", type: "string"}
            { inputs: [ "WebApplicationProductivityIndex" ], output: "unmapped.WebApplicationProductivityIndex", type: "string"}
            { inputs: [ "ZeroTrustApplication" ], output: "unmapped.ZeroTrustApplication", type: "string"}
            { inputs: [ "ZeroTrustApplicationGroup" ], output: "unmapped.ZeroTrustApplicationGroup", type: "string"}
            { inputs: [ "ZeroTrustApplicationPolicy" ], output: "unmapped.ZeroTrustApplicationPolicy", type: "string"}
            { inputs: [ "ArchiveDepth" ], output: "unmapped.ArchiveDepth", type: "string"}
            { inputs: [ "ArchiveFileName" ], output: "unmapped.ArchiveFileName", type: "string"}
            { inputs: [ "ArchiveFileStatus" ], output: "unmapped.ArchiveFileStatus", type: "string"}
            { inputs: [ "ArchiveFileStatusID" ], output: "unmapped.ArchiveFileStatusID", type: "string"}
            { inputs: [ "ArchiveSHA256" ], output: "unmapped.ArchiveSHA256", type: "string"}
            { inputs: [ "ClientApplicationID" ], output: "unmapped.ClientApplicationID", type: "string"}
            { inputs: [ "ContextUUID" ], output: "unmapped.ContextUUID", type: "string"}
            { inputs: [ "Device" ], output: "device.name", type: "string"}
            { inputs: [ "EventDescription" ], output: "unmapped.EventDescription", type: "string"}
            { inputs: [ "MitreAttackGroups" ], output: "unmapped.MitreAttackGroups", type: "string"}
            { inputs: [ "RealmName" ], output: "unmapped.RealmName", type: "string"}
            { inputs: [ "ReceivingContinent" ], output: "unmapped.ReceivingContinent", type: "string"}
            { inputs: [ "ReceivingCountry" ], output: "unmapped.ReceivingCountry", type: "string"}
            { inputs: [ "ReceivingCountryCode" ], output: "unmapped.ReceivingCountryCode", type: "string"}
            { inputs: [ "ReceivingCountryID" ], output: "unmapped.ReceivingCountryID", type: "string"}
            { inputs: [ "ReceivingIP" ], output: "unmapped.ReceivingIP", type: "string"}
            { inputs: [ "ReceivingPort" ], output: "unmapped.ReceivingPort", type: "string"}
            { inputs: [ "SendingContinent" ], output: "unmapped.SendingContinent", type: "string"}
            { inputs: [ "SendingCountry" ], output: "unmapped.SendingCountry", type: "string"}
            { inputs: [ "SendingIP" ], output: "unmapped.SendingIP", type: "string"}
            { inputs: [ "SendingPort" ], output: "unmapped.SendingPort", type: "string"}
            { inputs: [ "ThreatName" ], output: "unmapped.ThreatName", type: "string"}
            { inputs: [ "ThreatScore" ], output: "unmapped.ThreatScore", type: "string"}
            { inputs: [ "UserNameNoRealm" ], output: "unmapped.UserNameNoRealm", type: "string"}
          ],
          drops: ["NAT_InitiatorIP", "NAT_ResponderIP"],
          constants: [
            { value: 99, field: "activity_id"}
            { value: 4001, field: "class_uid"}
            { value: "Network Activity", field: "class_name"}
            { value: 4, field: "category_uid"}
            { value: 400199, field: "type_uid"}
            { value: "Network Activity", field: "category_name"}
            { value: "Network Activity: Other", field: "type_name"}
            { value: 0, field: "device.type_id"}
            { value: 0, field: "connection_info.direction_id"}
            { value: "src_endpoint.ip", field: "observables[0].name"}
            { value: "IP Address", field: "observables[0].type"}
            { value: 2, field: "observables[0].type_id"}
            { value: "dst_endpoint.ip", field: "observables[1].name"}
            { value: "IP Address", field: "observables[1].type"}
            { value: 2, field: "observables[1].type_id"}
            { value: "actor.process.file.hashes[0].value", field: "observables[2].name"}
            { value: "Hash", field: "observables[2].type"}
            { value: 8, field: "observables[2].type_id"}
            { value: "SHA-256", field: "actor.process.file.hashes[0].algorithm"}
            { value: 3, field: "actor.process.file.hashes[0].algorithm_id"}
            { value: 99, field: "actor.process.file.type_id"}
            { value: 99, field: "action_id"}
            { value: 1, field: "action_id", predicate: "AC_RuleAction = 'Allow'"}
            { value: 2, field: "action_id", predicate: "AC_RuleAction = 'Block'"}
          ]
        },
        {
          predicate: "EventType='IntrusionEvent'",
          copies: [
            { inputs: [ "EventType" ], output: "event.type", type: "string"},
            { inputs: [ "EventSecond" ], output: "time", type: "int"}
          ],
          renames: [
            { inputs: [ "EventSecond" ], output: "metadata.original_time", type: "string"}
            { inputs: [ "EventType" ], output: "activity_name", type: "string"}
            { inputs: [ "EventMicrosecond" ], output: "unmapped.EventMicrosecond", type: "string"}
            { inputs: [ "DeviceUUID" ], output: "device.uid", type: "string"}
            { inputs: [ "InstanceID" ], output: "device.instance_uid", type: "string"}
            { inputs: [ "FirstPacketSecond" ], output: "unmapped.FirstPacketSecond", type: "string"}
            { inputs: [ "ConnectionID" ], output: "evidences[0].connection_info.uid", type: "string"}
            { inputs: [ "InitiatorIP" ], output: "evidences[0].src_endpoint.ip", type: "string"}
            { inputs: [ "ResponderIP" ], output: "evidences[0].dst_endpoint.ip", type: "string"}
            { inputs: [ "InitiatorPort" ], output: "evidences[0].src_endpoint.port", type: "string"}
            { inputs: [ "ResponderPort" ], output: "evidences[0].dst_endpoint.port", type: "string"}
            { inputs: [ "Protocol" ], output: "evidences[0].connection_info.protocol_name", type: "string"}
            { inputs: [ "IngressInterface" ], output: "unmapped.IngressInterface", type: "string"}
            { inputs: [ "EgressInterface" ], output: "unmapped.EgressInterface", type: "string"}
            { inputs: [ "PriorityID" ], output: "unmapped.PriorityID", type: "string"}
            { inputs: [ "GeneratorID" ], output: "finding_info.uid", type: "string"}
            { inputs: [ "SignatureID" ], output: "unmapped.SignatureID", type: "string"}
            { inputs: [ "SignatureRevision" ], output: "unmapped.SignatureRevision", type: "string"}
            { inputs: [ "Impact" ], output: "impact_score", type: "string"}
            { inputs: [ "IntrusionRuleMessage" ], output: "finding_info.desc", type: "string"}
            { inputs: [ "Classification" ], output: "finding_info.title", type: "string"}
            { inputs: [ "IntrusionPolicy" ], output: "unmapped.IntrusionPolicy", type: "string"}
            { inputs: [ "FirewallPolicy" ], output: "unmapped.FirewallPolicy", type: "string"}
            { inputs: [ "FirewallRule" ], output: "firewall_rule.name", type: "string"}
            { inputs: [ "NAP_Policy" ], output: "unmapped.NAP_Policy", type: "string"}
            { inputs: [ "InlineResult" ], output: "status_detail", type: "string"}
            { inputs: [ "IngressVRF" ], output: "unmapped.IngressVRF", type: "string"}
            { inputs: [ "EgressVRF" ], output: "unmapped.EgressVRF", type: "string"}
            { inputs: [ "HTTP_Hostname" ], output: "device.hostname", type: "string"}
            { inputs: [ "HTTP_URI" ], output: "unmapped.HTTP_URI", type: "string"}
            { inputs: [ "SnortRuleGroups" ], output: "unmapped.SnortRuleGroups", type: "string"}
            { inputs: [ "MitreAttackGroups" ], output: "unmapped.MitreAttackGroups", type: "string"}
            { inputs: [ "Application" ], output: "unmapped.Application", type: "string"}
            { inputs: [ "ApplicationID" ], output: "unmapped.ApplicationID", type: "string"}
            { inputs: [ "ApplicationProductivityIndex" ], output: "unmapped.ApplicationProductivityIndex", type: "string"}
            { inputs: [ "ApplicationRiskIndex" ], output: "risk_level", type: "string"}
            { inputs: [ "AuthenticationSource" ], output: "unmapped.AuthenticationSource", type: "string"}
            { inputs: [ "ClientApplication" ], output: "unmapped.ClientApplication", type: "string"}
            { inputs: [ "ClientApplicationID" ], output: "unmapped.ClientApplicationID", type: "string"}
            { inputs: [ "ClientApplicationProductivityIndex" ], output: "unmapped.ClientApplicationProductivityIndex", type: "string"}
            { inputs: [ "ClientApplicationRiskIndex" ], output: "unmapped.ClientApplicationRiskIndex", type: "string"}
            { inputs: [ "Context" ], output: "unmapped.Context", type: "string"}
            { inputs: [ "CVE_ID" ], output: "unmapped.CVE_ID", type: "string"}
            { inputs: [ "Device" ], output: "device.name", type: "string"}
            { inputs: [ "DeviceIP" ], output: "device.ip", type: "string"}
            { inputs: [ "DeviceSerialNumber" ], output: "unmapped.DeviceSerialNumber", type: "string"}
            { inputs: [ "EgressInterfaceUUID" ], output: "unmapped.EgressInterfaceUUID", type: "string"}
            { inputs: [ "Domain" ], output: "evidences[0].src_endpoint.domain", type: "string"}
            { inputs: [ "EgressZone" ], output: "unmapped.EgressZone", type: "string"}
            { inputs: [ "EgressZoneUUID" ], output: "unmapped.EgressZoneUUID", type: "string"}
            { inputs: [ "EventID" ], output: "metadata.uid", type: "string"}
            { inputs: [ "EventPriority" ], output: "severity", type: "string"}
            { inputs: [ "FirewallPolicyUUID" ], output: "unmapped.FirewallPolicyUUID", type: "string"}
            { inputs: [ "FirewallRuleID" ], output: "firewall_rule.uid", type: "string"}
            { inputs: [ "Hostname" ], output: "evidences[0].src_endpoint.hostname", type: "string"}
            { inputs: [ "HTTP_Response" ], output: "api.response.code", type: "string"}
            { inputs: [ "HTTP_URI" ], output: "unmapped.HTTP_URI", type: "string"}
            { inputs: [ "ICMP_Code" ], output: "unmapped.ICMP_Code", type: "string"}
            { inputs: [ "ICMP_Type" ], output: "unmapped.ICMP_Type", type: "string"}
            { inputs: [ "ImpactFlag" ], output: "unmapped.ImpactFlag", type: "string"}
            { inputs: [ "Impact" ], output: "impact_score", type: "string"}
            { inputs: [ "IngressInterfaceUUID" ], output: "unmapped.IngressInterfaceUUID", type: "string"}
            { inputs: [ "IngressZone" ], output: "unmapped.IngressZone", type: "string"}
            { inputs: [ "IngressZoneUUID" ], output: "unmapped.IngressZoneUUID", type: "string"}
            { inputs: [ "InitiatorContinent" ], output: "unmapped.InitiatorContinent", type: "string"}
            { inputs: [ "InitiatorContinentCode" ], output: "unmapped.InitiatorContinentCode", type: "string"}
            { inputs: [ "InitiatorCountry" ], output: "evidences[0].src_endpoint.location.country", type: "string"}
            { inputs: [ "InitiatorCountryCode" ], output: "unmapped.InitiatorCountryCode", type: "string"}
            { inputs: [ "InitiatorCountryID" ], output: "unmapped.InitiatorCountryID", type: "string"}
            { inputs: [ "InitiatorHostCriticality" ], output: "unmapped.InitiatorHostCriticality", type: "string"}
            { inputs: [ "InitiatorOS_Name" ], output: "evidences[0].src_endpoint.os.name", type: "string"}
            { inputs: [ "InitiatorOS_Version" ], output: "evidences[0].src_endpoint.os.version", type: "string"}
            { inputs: [ "InlineResultID" ], output: "unmapped.InlineResultID", type: "string"}
            { inputs: [ "InlineResultReason" ], output: "unmapped.InlineResultReason", type: "string"}
            { inputs: [ "InlineResultReasonID" ], output: "unmapped.InlineResultReasonID", type: "string"}
            { inputs: [ "IntrusionPolicyRevUUID" ], output: "unmapped.IntrusionPolicyRevUUID", type: "string"}
            { inputs: [ "IntrusionPolicyUUID" ], output: "unmapped.IntrusionPolicyUUID", type: "string"}
            { inputs: [ "ManagerName" ], output: "actor.user.org.ou_name", type: "string"}
            { inputs: [ "ManagerUUID" ], output: "actor.user.org.ou_uid", type: "string"}
            { inputs: [ "MatchedRule" ], output: "unmapped.MatchedRule", type: "string"}
            { inputs: [ "MPLS_Label" ], output: "unmapped.MPLS_Label", type: "string"}
            { inputs: [ "NAP_PolicyUUID" ], output: "unmapped.NAP_PolicyUUID", type: "string"}
            { inputs: [ "NetmapID" ], output: "unmapped.NetmapID", type: "string"}
            { inputs: [ "OriginalInitiatorIP" ], output: "unmapped.OriginalInitiatorIP", type: "string"}
            { inputs: [ "Priority" ], output: "unmapped.Priority", type: "string"}
            { inputs: [ "ProtocolID" ], output: "unmapped.ProtocolID", type: "string"}
            { inputs: [ "RealmID" ], output: "unmapped.RealmID", type: "string"}
            { inputs: [ "RealmName" ], output: "unmapped.RealmName", type: "string"}
            { inputs: [ "ResponderContinent" ], output: "unmapped.ResponderContinent", type: "string"}
            { inputs: [ "ResponderContinentCode" ], output: "unmapped.ResponderContinentCode", type: "string"}
            { inputs: [ "ResponderCountry" ], output: "evidences[0].dst_endpoint.location.country", type: "string"}
            { inputs: [ "ResponderCountryCode" ], output: "unmapped.ResponderCountryCode", type: "string"}
            { inputs: [ "ResponderCountryID" ], output: "unmapped.ResponderCountryID", type: "string"}
            { inputs: [ "ResponderHostCriticality" ], output: "unmapped.ResponderHostCriticality", type: "string"}
            { inputs: [ "ResponderOS_Name" ], output: "evidences[0].dst_endpoint.os.name", type: "string"}
            { inputs: [ "ResponderOS_Version" ], output: "evidences[0].dst_endpoint.os.version", type: "string"}
            { inputs: [ "ReviewedBy" ], output: "unmapped.ReviewedBy", type: "string"}
            { inputs: [ "SensorID" ], output: "unmapped.SensorID", type: "string"}
            { inputs: [ "SignatureID" ], output: "unmapped.SignatureID", type: "string"}
            { inputs: [ "SMTP_Attachments" ], output: "unmapped.SMTP_Attachments", type: "string"}
            { inputs: [ "SMTP_From" ], output: "unmapped.SMTP_From", type: "string"}
            { inputs: [ "SMTP_Headers" ], output: "unmapped.SMTP_Headers", type: "string"}
            { inputs: [ "SMTP_To" ], output: "unmapped.SMTP_To", type: "string"}
            { inputs: [ "SnortVersionID" ], output: "unmapped.SnortVersionID", type: "string"}
            { inputs: [ "SSL_ActualAction" ], output: "unmapped.SSL_ActualAction", type: "string"}
            { inputs: [ "SSL_ActualActionID" ], output: "unmapped.SSL_ActualActionID", type: "string"}
            { inputs: [ "SSL_Cert" ], output: "unmapped.SSL_Cert", type: "string"}
            { inputs: [ "SSL_CertFingerprint" ], output: "unmapped.SSL_CertFingerprint", type: "string"}
            { inputs: [ "SSL_FlowStatusID" ], output: "unmapped.SSL_FlowStatusID", type: "string"}
            { inputs: [ "UserID" ], output: "actor.user.uid", type: "string"}
            { inputs: [ "UserName" ], output: "actor.user.name", type: "string"}
            { inputs: [ "UserProtocol" ], output: "unmapped.UserProtocol", type: "string"}
            { inputs: [ "VLAN_ID" ], output: "unmapped.VLAN_ID", type: "string"}
            { inputs: [ "WebApplication" ], output: "unmapped.WebApplication", type: "string"}
            { inputs: [ "WebApplicationHTTP" ], output: "unmapped.WebApplicationHTTP", type: "string"}
            { inputs: [ "WebApplicationID" ], output: "unmapped.WebApplicationID", type: "string"}
            { inputs: [ "WebApplicationProductivityIndex" ], output: "unmapped.WebApplicationProductivityIndex", type: "string"}
            { inputs: [ "HTTP_Hostname" ], output: "observables[0].value", type: "string"}
            { inputs: [ "InitiatorIP" ], output: "observables[1].value", type: "string"}
            { inputs: [ "ResponderIP" ], output: "observables[2].value", type: "string"}
          ],
          constants: [
            { value: 99, field: "activity_id"}
            { value: 2004, field: "class_uid"}
            { value: 2, field: "category_uid"}
            { value: 200499, field: "type_uid"}
            { value: "Findings", field: "category_name"}
            { value: "Detection Finding", field: "class_name"}
            { value: "Detection Finding: Other", field: "type_name"}
            { value: 0, field: "device.type_id"}
            { value: 0, field: "connection_info.direction_id"}
            { value: 0, field: "action_id"}
            { value: "device.hostname", field: "observables[0].name"}
            { value: "Hostname", field: "observables[0].type"}
            { value: 1, field: "observables[0].type_id"}
            { value: "evidences[0].src_endpoint.ip", field: "observables[1].name"}
            { value: "IP Address", field: "observables[1].type"}
            { value: 2, field: "observables[1].type_id"}
            { value: "evidences[0].dst_endpoint.ip", field: "observables[2].name"}
            { value: "IP Address", field: "observables[2].type"}
            { value: 2, field: "observables[2].type_id"}
            { value: 0, field: "evidences[0].src_endpoint.os.type_id"}
            { value: 0, field: "evidences[0].dst_endpoint.os.type_id"}
          ]
        }
      ]
    }
  }
  