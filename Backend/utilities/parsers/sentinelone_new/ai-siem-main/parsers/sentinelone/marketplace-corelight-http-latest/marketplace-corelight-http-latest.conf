{
  attributes: {
    "dataSource.category": "security",
    "dataSource.name": "Corelight",
    "dataSource.vendor": "Corelight",
    "category_uid": 4,
    "category_name": "Network Activity",
    "class_uid": 4002,
    "class_name": "HTTP Activity",
    "severity_id": 1,
    "severity": "Informational",
    "metadata.product.name": "Zeek",
    "metadata.product.vendor_name": "Corelight",
    "metadata.version": "1.1.0",
    "metadata.log_name": "http",
    "app_name": "Zeek",
    "activity_id": 0
  },
  formats: [
    {
      format: "${parse=dottedJson}$",
      repeat: true
    }
  ],
  mappings: {
    version: 0,
    mappings: [
      {
      predicate: "true",
      copies: [
        {inputs: ["ts"], output: "time", type: "string"}
        {inputs: ["method"], output: "http_request.http_method", type: "string"}
      ]
      renames: [
        {inputs: ["ts"], output: "timestamp", type: "string"}
        {inputs: ["uid"], output: "metadata.uid", type: "string"}
        {inputs: ["id.orig_h"], output: "src_endpoint.ip", type: "string"}
        {inputs: ["id.orig_p"], output: "src_endpoint.port", type: "string"}
        {inputs: ["id.resp_h"], output: "dst_endpoint.ip", type: "string"}
        {inputs: ["id.resp_p"], output: "dst_endpoint.port", type: "string"}
        {inputs: ["trans_depth"], output: "unmapped.trans_depth", type: "string"}
        {inputs: ["method"], output: "activity_name", type: "string"}
        {inputs: ["host"], output: "device.hostname", type: "string"}
        {inputs: ["uri"], output: "http_request.url.url_string", type: "string"}
        {inputs: ["referrer"], output: "http_request.referrer", type: "string"}
        {inputs: ["version"], output: "metadata.version", type: "string"}
        {inputs: ["user_agent"], output: "http_request.user_agent", type: "string"}
        {inputs: ["origin"], output: "http_request.x_forwarded_for", type: "string"}
        {inputs: ["request_body_len"], output: "http_request.length", type: "string"}
        {inputs: ["response_body_len"], output: "http_response.length", type: "string"}
        {inputs: ["status_code"], output: "http_response.code", type: "string"}
        {inputs: ["status_msg"], output: "http_response.message", type: "string"}
        {inputs: ["info_code"], output: "unmapped.info_code", type: "string"}
        {inputs: ["info_msg"], output: "unmapped.info_msg", type: "string"}
        {inputs: ["tags"], output: "metadata.labels", type: "string"}
        {inputs: ["username"], output: "actor.user.name", type: "string"}
        {inputs: ["proxied"], output: "proxy_http_request.http_headers[0].value", type: "string"}
        {inputs: ["client_header_names"], output: "http_request.http_header.name", type: "string"}
        {inputs: ["cookie_vars"], output: "http_cookie.name", type: "string"}
      ],
      constants: [
        { value: 1, field: "activity_id", predicate: "activity_name = 'CONNECT'"}
        { value: 2, field: "activity_id", predicate: "activity_name = 'DELETE'"}
        { value: 3, field: "activity_id", predicate: "activity_name = 'GET'"}
        { value: 4, field: "activity_id", predicate: "activity_name = 'HEAD'"}
        { value: 5, field: "activity_id", predicate: "activity_name = 'OPTIONS'"}
        { value: 6, field: "activity_id", predicate: "activity_name = 'POST'"}
        { value: 7, field: "activity_id", predicate: "activity_name = 'PUT'"}
        { value: 8, field: "activity_id", predicate: "activity_name = 'TRACE'"}
      ]
      }
    ]
  }
}
