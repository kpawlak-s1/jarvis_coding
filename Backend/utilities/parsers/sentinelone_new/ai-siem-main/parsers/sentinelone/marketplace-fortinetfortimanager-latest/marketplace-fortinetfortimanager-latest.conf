{
  attributes: {
    "dataSource.category": "security",
    "dataSource.name": "FortiManager",
    "dataSource.vendor": "Fortinet",
    "metadata.product.name": "FortiManager",
    "metadata.product.vendor_name": "Fortinet",
    "metadata.version": "1.0.0",
  },
  formats: [
    {
      attributes: {
        "activity_id": "99",
        "category_uid": "5",
        "category_name": "Discovery",
        "class_uid": "5002",
        "class_name": "Device Config State",
        "type_uid": "500299",
        "type_name": "Device Config State: Other",
        "severity_id": "99",
        "status_id": "99",
      },
      format: ".*tz=$unmapped.tz$ devname=$device.name$ device_id=$device.uid$ log_id=$metadata.event_code$ type=$metadata.log_name$ subtype=$event.type$ pri=$unmapped.pri$ desc=$unmapped.desc$ user=$actor.user.name$ userfrom=$actor.invoked_by$ msg=$unmapped.msg$ adom=$unmapped.adom$ operstat=$status$ session_id=$actor.session.uid$ operation=$api.operation$ performed_on=$unmapped.performed_on$ changes=$unmapped.changes$ objtype=$unmapped.objtype$ objname=$unmapped.objname$",
      rewrites: [
        {
          input: "message",
          output: "metadata.original_time",
          match: ".*date\\=(.*?)\\stime\\=(.*?)\\s.*",
          replace: "$1 $2"
        }, 
      ]
    }, {
      attributes: {
        "activity_id": "99",
        "category_uid": "0",
        "category_name": "Uncategorized",
        "class_uid": "0",
        "class_name": "Base Event",
        "type_uid": "99",
        "type_name": "Base Event: Other",
        "severity_id": "99",
      },
      format: ".*log_id=$metadata.event_code$ type=$metadata.log_name$ subtype=$event.type$ level=$unmapped.level$ pri=$unmapped.pri$ desc=$unmapped.desc$ msg=$unmapped.msg$ user=$unmapped.user$ device=$unmapped.device$ devid=$unmapped.devid$",
      rewrites: [
        {
          input: "message",
          output: "metadata.original_time",
          match: ".*date\\=(.*?)\\stime\\=(.*?)\\s.*",
          replace: "$1 $2"
        },
      ]
    }, {
      attributes: {
        "activity_id": "99",
        "category_uid": "0",
        "category_name": "Uncategorized",
        "class_uid": "0",
        "class_name": "Base Event",
        "type_uid": "99",
        "type_name": "Base Event: Other",
        "severity_id": "99",
      },
      format: ".*tz=$unmapped.tz$ devname=$unmapped.devname$ device_id=$unmapped.device_id$ log_id=$metadata.event_code$ type=$metadata.log_name$ subtype=$event.type$ pri=$unmapped.pri$ desc=$unmapped.desc$ user=$unmapped.user$ msg=$unmapped.msg$ adom=$unmapped.adom$ operation=$api.operation$ performed_on=$unmapped.performed_on$ changes=$unmapped.changes$ ppkgname=$unmapped.ppkgname$",
      rewrites: [
        {
          input: "message",
          output: "metadata.original_time",
          match: ".*date\\=(.*?)\\stime\\=(.*?)\\s.*",
          replace: "$1 $2"
        }
      ]
    }, {
      attributes: {
        "activity_id": "99",
        "category_uid": "5",
        "category_name": "Discovery",
        "class_uid": "5002",
        "class_name": "Device Config State",
        "type_uid": "500299",
        "type_name": "Device Config State: Other",
        "severity_id": "99",
      },
      format: ".*tz=$unmapped.tz$ devname=$device.name$ device_id=$device.uid$ log_id=$metadata.event_code$ type=$metadata.log_name$ subtype=$event.type$ pri=$unmapped.pri$ desc=$unmapped.desc$ user=$actor.user.name$ userfrom=$actor.invoked_by$ msg=$unmapped.msg$ device=$unmapped.device$ serial=$device.hw_info.serial_number$ dev_oid=$unmapped.dev_oid$ session_id=$actor.session.uid$ operation=$api.operation$ performed_on=$unmapped.performed_on$ changes=$unmapped.changes$ revision=$unmapped.revision$",
      rewrites: [
        {
          input: "message",
          output: "metadata.original_time",
          match: ".*date\\=(.*?)\\stime\\=(.*?)\\s.*",
          replace: "$1 $2"
        }
      ]
    }, {
      attributes: {
        "activity_id": "99",
        "category_uid": "0",
        "category_name": "Uncategorized",
        "class_uid": "0",
        "class_name": "Base Event",
        "type_uid": "99",
        "type_name": "Base Event: Other"
        "severity_id": "99",
      },
      format: ".*devname=$unmapped.devname$ devid=$unmapped.devid$ logid=$metadata.event_code$ type=$metadata.log_name$ subtype=$event.type$ level=$unmapped.level$ vd=$unmapped.vd$ logdesc=$unmapped.logdesc$ msg=$unmapped.msg$ sync_type=$unmapped.sync_type$ sync_status=$unmapped.Sync_status$",
      rewrites: [
        {
          input: "message",
          output: "metadata.original_time",
          match: ".*date\\=(.*?)\\stime\\=(.*?)\\s.*",
          replace: "$1 $2"
        },
      ]
    },{
      attributes: {
        "activity_id": "99",
        "category_uid": "5",
        "category_name": "Discovery",
        "class_uid": "5002",
        "class_name": "Device Config State",
        "type_uid": "500299",
        "type_name": "Device Config State: Other",
        "severity_id": "99",
      },
      format: ".*tz=$unmapped.tz$ devname=$device.name$ device_id=$device.uid$ log_id=$metadata.event_code$ type=$metadata.log_name$ subtype=$event.type$ pri=$unmapped.pri$ desc=$unmapped.desc$ user=$actor.user.name$ userfrom=$actor.invoked_by$ msg=$unmapped.msg$ adom=$unmapped.adom$ session_id=$actor.session.uid$ operation=$api.operation$ performed_on=$unmapped.performed_on$ changes=$unmapped.changes$",
      rewrites: [
        {
          input: "message",
          output: "metadata.original_time",
          match: ".*date\\=(.*?)\\stime\\=(.*?)\\s.*",
          replace: "$1 $2"
        }
      ]
    },
  ],
  mappings: {
    version: 0,
    mappings: [
      {
        predicate: "event.type = 'system'",
        copies: [
          {inputs: ["actor.user.name"], output: "observables[0].value", type: "string"}
          {inputs: ["event.type"], output: "activity_name", type: "string"}
        ]
        drops: []
        constants: [
          { value: 1, field: "severity_id", predicate: "unmapped.severity = 'information'"}
          { value: 2, field: "severity_id", predicate: "unmapped.severity = 'critical'"}
          { value: 2, field: "severity_id", predicate: "unmapped.severity = 'successfully'"}
          { value: 1, field: "status_id", predicate: "status = 'Emergency'"}
          { value: 4, field: "observables[0].type_id"}
          { value: "User Name", field: "observables[0].type"}
          { value: "actor.user.name", field: "observables[0].name"}
        ]
      },
      {
        predicate: "event.type = 'fgfm'",
        copies: [
          {inputs: ["unmapped.user"], output: "observables[0].value", type: "string"}
          {inputs: ["event.type"], output: "activity_name", type: "string"}
        ]
        drops: []
        constants: [
          { value: 1, field: "severity_id", predicate: "unmapped.severity = 'information'"}
          { value: 5, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
          { value: 6, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
          { value: 4, field: "observables[0].type_id"}
          { value: "User Name", field: "observables[0].type"}
          { value: "unmapped.user", field: "observables[0].name"}
        ]
      },
      {
        predicate: "event.type = 'scply'",
        copies: [
          {inputs: ["unmapped.user"], output: "observables[0].value", type: "string"}
          {inputs: ["event.type"], output: "activity_name", type: "string"}
        ]
        drops: []
        constants: [
          { value: 1, field: "severity_id", predicate: "unmapped.severity = 'information'"}
          { value: 5, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
          { value: 6, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
          { value: 4, field: "observables[0].type_id"}
          { value: "User Name", field: "observables[0].type"}
          { value: "unmapped.user", field: "observables[0].name"}
        ]
      },
      {
        predicate: "event.type = 'dm'",
        copies: [
          {inputs: ["actor.user.name"], output: "observables[0].value", type: "string"}
          {inputs: ["event.type"], output: "activity_name", type: "string"}
        ]
        drops: []
        constants: [
          { value: 1, field: "severity_id", predicate: "unmapped.severity = 'information'"}
          { value: 5, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
          { value: 6, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
          { value: 4, field: "observables[0].type_id"}
          { value: "User Name", field: "observables[0].type"}
          { value: "actor.user.name", field: "observables[0].name"}
        ]
      },
      {
        predicate: "event.type = 'ha'",
        copies: [
          {inputs: ["event.type"], output: "activity_name", type: "string"}
        ]
        drops: []
        constants: [
          { value: 1, field: "severity_id", predicate: "unmapped.severity = 'information'"}
          { value: 5, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
          { value: 6, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
        ]
      },
      {
        predicate: "event.type = 'objcfg'",
        copies: [
          {inputs: ["actor.user.name"], output: "observables[0].value", type: "string"}
          {inputs: ["event.type"], output: "activity_name", type: "string"}
        ]
        drops: []
        constants: [
          { value: 1, field: "severity_id", predicate: "unmapped.severity = 'information'"}
          { value: 5, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
          { value: 6, field: "severity_id", predicate: "unmapped.severity = 'Emergency'"}
          { value: 4, field: "observables[0].type_id"}
          { value: "User Name", field: "observables[0].type"}
          { value: "actor.user.name", field: "observables[0].name"}
        ]
      }
    ]
  }
}