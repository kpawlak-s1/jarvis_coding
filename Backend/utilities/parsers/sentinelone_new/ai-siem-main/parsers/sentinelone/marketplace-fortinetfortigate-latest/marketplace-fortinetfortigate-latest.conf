{
  attributes: {
   "dataSource.category": "security",
   "dataSource.name": "FortiGate",
   "dataSource.vendor": "Fortinet",
   "metadata.version": "1.0.0",
   "metadata.product.vendor_name": "Fortinet",
   "metadata.product.name": "FortiGate",
   "severity_id": 99
 },
 formats: [
   {
     format: ".*$_=identifier$=$_=quoteOrSpace{attrBlacklist=timestamp|time}$.*",
     repeat: true,
     skipNumericConversion: true,
     rewrites: [
       {
         input: "eventtime",
         output: "timestamp",
         match: ".*",
         replace: "$0"
       },
       {
         input: "eventtime",
         output: "ocsf_time",
         match: "^(\\d{13})(\\d{6})",
         replace: "$1"
       },
     ]
   },
   {
     attributes: {
       "status_id": 99
     }
     format: ".*subtype=\"(user)\".*"
     rewrites: [
       {
         input: "status",
         output: "status_id",
         match: "^success$"
         replace: 1
       },
       {
         input: "status",
         output: "status_id",
         match: "^failure$"
         replace: 2
       },
     ]
   },
 ],
 mappings: {
   version: 0,
   mappings: [
     {
       predicate: "type='traffic'",
       copies: [
         {inputs: ["type"], output: "event.type", type: "string"},
         {inputs: ["ocsf_time"], output: "time", type: "int"},
         {inputs: ["srcip"], output: "observables[0].value", type: "string"},
         {inputs: ["srcip"], output: "observables[0].name", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type_id", type: "int"},
         {inputs: ["dstip"], output: "observables[1].value", type: "string"},
         {inputs: ["dstip"], output: "observables[1].name", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type_id", type: "int"},
         {inputs: ["srcmac"], output: "observables[2].value", type: "string"},
         {inputs: ["srcmac"], output: "observables[2].name", type: "string"},
         {inputs: ["srcmac"], output: "observables[2].type", type: "string"},
         {inputs: ["srcmac"], output: "observables[2].type_id", type: "int"},
         {inputs: ["dstmac"], output: "observables[3].value", type: "string"},
         {inputs: ["dstmac"], output: "observables[3].name", type: "string"},
         {inputs: ["dstmac"], output: "observables[3].type", type: "string"},
         {inputs: ["dstmac"], output: "observables[3].type_id", type: "int"},
         {inputs: ["transip"], output: "src_endpoint.intermediate_ips[0]", type: "string"}
       ],
       renames: [
         {inputs: ["type"], output: "activity_name", type: "string"},
         {inputs: ["dstip"], output: "dst_endpoint.ip", type: "string"},
         {inputs: ["dstport"], output: "dst_endpoint.port", type: "string"},
         {inputs: ["action"], output: "unmapped.action", type: "string"},
         {inputs: ["appcat"], output: "unmapped.appcat", type: "string"},
         {inputs: ["app"], output: "app_name", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["devid"], output: "device.uid", type: "string"},
         {inputs: ["devname"], output: "device.name", type: "string"},
         {inputs: ["dstcountry"], output: "dst_endpoint.location.country", type: "string"},
         {inputs: ["dstintf"], output: "dst_endpoint.interface_name", type: "string"},
         {inputs: ["dstip"], output: "dst_endpoint.ip", type: "string"},
         {inputs: ["dstmac"], output: "dst_endpoint.mac", type: "string"},
         {inputs: ["dstport"], output: "dst_endpoint.port", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["policytype"], output: "unmapped.policytype", type: "string"},
         {inputs: ["poluuid"], output: "unmapped.poluuid", type: "string"},
         {inputs: ["proto"], output: "connection_info.protocol_num", type: "string"},
         {inputs: ["sentbyte"], output: "traffic.bytes_out", type: "string"},
         {inputs: ["rcvdbyte"], output: "traffic.bytes_in", type: "string"},
         {inputs: ["sentpkt"], output: "traffic.packets_out", type: "string"},
         {inputs: ["rcvdpkt"], output: "traffic.packets_in", type: "string"},
         {inputs: ["service"], output: "src_endpoint.svc_name", type: "string"},
         {inputs: ["sessionid"], output: "actor.session.uid", type: "string"},
         {inputs: ["srcip"], output: "src_endpoint.ip", type: "string"},
         {inputs: ["srcmac"], output: "src_endpoint.mac", type: "string"},
         {inputs: ["srccountry"], output: "src_endpoint.location.country", type: "string"},
         {inputs: ["srcintf"], output: "src_endpoint.interface_name", type: "string"},
         {inputs: ["srcintfrole"], output: "unmapped.srcintfrole", type: "string"},
         {inputs: ["srcport"], output: "src_endpoint.port", type: "string"},
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["transport"], output: "unmapped.transport", type: "string"},
         {inputs: ["vd"], output: "device.domain", type: "string"},
         {inputs: ["srcserver"], output: "unmapped.srcserver", type: "string"},
         {inputs: ["dstserver"], output: "unmapped.dstserver", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["mastersrcmac"], output: "unmapped.mastersrcmac", type: "string"},
         {inputs: ["dstosname"], output: "unmapped.dstosname", type: "string"},
         {inputs: ["dstswversion"], output: "unmapped.dstswversion", type: "string"},
         {inputs: ["masterdstmac"], output: "unmapped.masterdstmac", type: "string"},
         {inputs: ["sentdelta"], output: "unmapped.sentdelta", type: "string"},
         {inputs: ["rcvddelta"], output: "unmapped.rcvddelta", type: "string"},
         {inputs: ["identifier"], output: "metadata.event_code", type: "string"},
         {inputs: ["centralnatid"], output: "unmapped.centralnatid", type: "string"},
         {inputs: ["crscore"], output: "unmapped.crscore", type: "string"},
         {inputs: ["craction"], output: "unmapped.craction", type: "string"},
         {inputs: ["crlevel"], output: "unmapped.crlevel", type: "string"},
         {inputs: ["srchwvendor"], output: "unmapped.srchwvendor", type: "string"},
         {inputs: ["devtype"], output: "device.type", type: "string"},
         {inputs: ["srcfamily"], output: "unmapped.srcfamily", type: "string"},
         {inputs: ["countapp"], output: "count", type: "int"},
         {inputs: ["id"], output: "unmapped.id", type: "string"},
         {inputs: ["bid"], output: "unmapped.bid", type: "string"},
         {inputs: ["dvid"], output: "unmapped.dvid", type: "string"},
         {inputs: ["itime"], output: "unmapped.itime", type: "string"},
         {inputs: ["euid"], output: "unmapped.euid", type: "string"},
         {inputs: ["dsteuid"], output: "unmapped.dsteuid", type: "string"},
         {inputs: ["dstepid"], output: "unmapped.dstepid", type: "string"},
         {inputs: ["logver"], output: "metadata.log_version", type: "string"},
         {inputs: ["osname"], output: "device.os.name", type: "string"},
         {inputs: ["msg"], output: "unmapped.msg", type: "string"},
         {inputs: ["utmaction"], output: "unmapped.utmaction", type: "string"},
         {inputs: ["countips"], output: "unmapped.countips", type: "string"},
         {inputs: ["utmref"], output: "unmapped.utmref", type: "string"},
         {inputs: ["dstintfrole"], output: "unmapped.dstintfrole", type: "string"},
         {inputs: ["trandisp"], output: "unmapped.trandisp", type: "string"},
         {inputs: ["dsthwvendor"], output: "metadata.product.vendor_name", type: "string"},
         {inputs: ["policyid"], output: "actor.authorizations[0].policy.uid", type: "string"},
         {inputs: ["policyname"], output: "actor.authorizations[0].policy.name", type: "string"},
       ],
       drops: ["transip", "ocsf_time"],
       constants: [
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
         { value: 2, field: "observables[0].type_id"},
         { value: "IP Address", field: "observables[0].type"},
         { value: "src_endpoint.ip", field: "observables[0].name"},
         { value: 2, field: "observables[1].type_id"},
         { value: "IP Address", field: "observables[1].type"},
         { value: "dst_endpoint.ip", field: "observables[1].name"},
         { value: 4, field: "observables[2].type_id"},
         { value: "MAC Address", field: "observables[2].type"},
         { value: "src_endpoint.mac", field: "observables[2].name"},
         { value: 4, field: "observables[3].type_id"},
         { value: "MAC Address", field: "observables[3].type"},
         { value: "dst_endpoint.mac", field: "observables[3].name"},
         { value: 6, field: "activity_id"},
         { value: 400106, field: "type_uid"},
         { value: 4001, field: "class_uid"},
         { value: 4, field: "category_uid"},
         { value: "Network Activity", field: "class_name"},
         { value: "Network Activity", field: "category_name"},
         { value: "Network Activity: Traffic", field: "type_name"},
         { value: 0, field: "connection_info.direction_id"},
       ]
     },
     {
       predicate: "subtype='fortiextender' or 'switch-controller'",
       copies: [
         {inputs: ["ocsf_time"], output: "time", type: "int"},
       ],
       renames: [
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["vd"], output: "device.domain", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["logdesc"], output: "unmapped.logdesc", type: "string"},
         {inputs: ["sn"], output: "device.hw_info.serial_number", type: "string"},
         {inputs: ["ip"], output: "device.ip", type: "string"},
         {inputs: ["action"], output: "unmapped.action", type: "string"},
         {inputs: ["imei"], output: "device.imei", type: "string"},
         {inputs: ["imsi"], output: "unmapped.imsi", type: "string"},
         {inputs: ["iccid"], output: "unmapped.iccid", type: "string"},
         {inputs: ["phonenumber"], output: "unmapped.phonenumber", type: "string"},
         {inputs: ["carrier"], output: "unmapped.carrier", type: "string"},
         {inputs: ["plan"], output: "unmapped.plan", type: "string"},
         {inputs: ["apn"], output: "unmapped.apn", type: "string"},
         {inputs: ["service"], output: "unmapped.service", type: "string"},
         {inputs: ["msg"], output: "unmapped.msg", type: "string"},
         {inputs: ["user"], output: "actor.user.name", type: "string"},
         {inputs: ["name"], output: "device.name", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 1, field: "activity_id"},
         { value: "Log", field: "activity_name"},
         { value: "Log", field: "event.type"},
         { value: 500201, field: "type_uid"},
         { value: 5002, field: "class_uid"},
         { value: 5, field: "category_uid"},
         { value: "Device Config State", field: "class_name"},
         { value: "Discovery", field: "category_name"},
         { value: "Device Config State: Other", field: "type_name"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
       ]
     },
     {
       predicate: "subtype='rest-api'",
       copies: [
         {inputs: ["subtype"], output: "event.type", type: "string"},
         {inputs: ["subtype"], output: "activity_name", type: "string"},
         {inputs: ["ocsf_time"], output: "time", type: "int"},
         {inputs: ["url"], output: "observables[0].value", type: "string"},
         {inputs: ["url"], output: "observables[0].name", type: "string"},
         {inputs: ["url"], output: "observables[0].type", type: "string"},
         {inputs: ["url"], output: "observables[0].type_id", type: "int"},
       ],
       renames: [
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["vd"], output: "unmapped.vd", type: "string"},
         {inputs: ["logdesc"], output: "unmapped.logdesc", type: "string"},
         {inputs: ["user"], output: "actor.user.name", type: "string"},
         {inputs: ["ui"], output: "unmapped.ui", type: "string"},
         {inputs: ["method"], output: "http_request.http_method", type: "string"},
         {inputs: ["path"], output: "http_request.url.path", type: "string"},
         {inputs: ["status"], output: "http_response.code", type: "string"},
         {inputs: ["url"], output: "http_request.url.url_string", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 99, field: "activity_id"},
         { value: 600399, field: "type_uid"},
         { value: 6003, field: "class_uid"},
         { value: 6, field: "category_uid"},
         { value: "API Activity", field: "class_name"},
         { value: "Application Activity", field: "category_name"},
         { value: "API Activity: Other", field: "type_name"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
         { value: 6, field: "observables[0].type_id"},
         { value: "URL String", field: "observables[0].type"},
         { value: "http_request.url.url_string", field: "observables[0].name"},
       ]
     },
     {
       predicate: "type='event' and subtype ='vpn'",
       copies: [
         {inputs: ["subtype"], output: "event.type", type: "string"},
         {inputs: ["subtype"], output: "activity_name", type: "string"},
         {inputs: ["ocsf_time"], output: "time", type: "int"},
       ],
       renames: [
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["id"], output: "unmapped.id", type: "string"},
         {inputs: ["bid"], output: "unmapped.bid", type: "string"},
         {inputs: ["dvid"], output: "unmapped.dvid", type: "string"},
         {inputs: ["itime"], output: "unmapped.itime", type: "string"},
         {inputs: ["euid"], output: "unmapped.euid", type: "string"},
         {inputs: ["epid"], output: "unmapped.epid", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["vd"], output: "unmapped.vd", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["logdesc"], output: "unmapped.logdesc", type: "string"},
         {inputs: ["msg"], output: "unmapped.msg", type: "string"},
         {inputs: ["dsteuid"], output: "unmapped.dsteuid", type: "string"},
         {inputs: ["dstepid"], output: "unmapped.dstepid", type: "string"},
         {inputs: ["devid"], output: "unmapped.devid", type: "string"},
         {inputs: ["addr"], output: "unmapped.addr", type: "string"},
         {inputs: ["devgrps"], output: "unmapped.devgrps", type: "string"},
         {inputs: ["devname"], output: "unmapped.devname", type: "string"},
         {inputs: ["logver"], output: "metadata.log_version", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["evname"], output: "unmapped.evname", type: "string"},
         {inputs: ["ha_role"], output: "unmapped.ha_role", type: "string"},
         {inputs: ["hostname"], output: "unmapped.hostname", type: "string"},
         {inputs: ["sn"], output: "unmapped.sn", type: "string"},
         {inputs: ["vcluster"], output: "unmapped.vcluster", type: "string"},
         {inputs: ["vcluster_member"], output: "unmapped.vcluster_member", type: "string"},
         {inputs: ["vcluster_state"], output: "unmapped.vcluster_state", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["healthcheck"], output: "unmapped.healthcheck", type: "string"},
         {inputs: ["inbandwidth"], output: "unmapped.inbandwidth", type: "string"},
         {inputs: ["interface"], output: "unmapped.interface", type: "string"},
         {inputs: ["jitter"], output: "unmapped.jitter", type: "string"},
         {inputs: ["latency"], output: "unmapped.latency", type: "string"},
         {inputs: ["metric"], output: "unmapped.metric", type: "string"},
         {inputs: ["outbandwidth"], output: "unmapped.outbandwidth", type: "string"},
         {inputs: ["packetloss"], output: "unmapped.packetloss", type: "string"},
         {inputs: ["slamap"], output: "unmapped.slamap", type: "string"},
         {inputs: ["slatargetid"], output: "unmapped.slatargetid", type: "string"},
         {inputs: ["status"], output: "status_detail", type: "string"},
         {inputs: ["bibandwidth"], output: "unmapped.bibandwidth", type: "string"},
         {inputs: ["from"], output: "unmapped.from", type: "string"},
         {inputs: ["stitch"], output: "unmapped.stitch", type: "string"},
         {inputs: ["stitchaction"], output: "unmapped.stitchaction", type: "string"},
         {inputs: ["trigger"], output: "unmapped.trigger", type: "string"},
         {inputs: ["reason"], output: "unmapped.reason", type: "string"},
         {inputs: ["duration"], output: "unmapped.duration", type: "string"},
         {inputs: ["dstip"], output: "unmapped.dstip", type: "string"},
         {inputs: ["srcip"], output: "unmapped.srcip", type: "string"},
         {inputs: ["method"], output: "unmapped.method", type: "string"},
         {inputs: ["cfgattr"], output: "unmapped.cfgattr", type: "string"},
         {inputs: ["cfgpath"], output: "unmapped.cfgpath", type: "string"},
         {inputs: ["cfgtid"], output: "unmapped.cfgtid", type: "string"},
         {inputs: ["used"], output: "unmapped.used", type: "string"},
         {inputs: ["total"], output: "unmapped.total", type: "string"},
         {inputs: ["freediskstorage"], output: "unmapped.freediskstorage", type: "string"},
         {inputs: ["disklograte"], output: "unmapped.disklograte", type: "string"},
         {inputs: ["fazlograte"], output: "unmapped.fazlograte", type: "string"},
         {inputs: ["trate"], output: "unmapped.trate", type: "string"},
         {inputs: ["waninfo"], output: "unmapped.waninfo", type: "string"},
         {inputs: ["ui"], output: "unmapped.ui", type: "string"},
         {inputs: ["setuprate"], output: "unmapped.setuprate", type: "string"},
         {inputs: ["disk"], output: "unmapped.disk", type: "string"},
         {inputs: ["mem"], output: "unmapped.mem", type: "string"},
         {inputs: ["cpu"], output: "unmapped.cpu", type: "string"},
         {inputs: ["sysuptime"], output: "unmapped.sysuptime", type: "string"},
         {inputs: ["authproto"], output: "unmapped.authproto", type: "string"},
         {inputs: ["action"], output: "unmapped.action", type: "string"},
         {inputs: ["group"], output: "unmapped.group", type: "string"},
         {inputs: ["policyid"], output: "unmapped.policyid", type: "string"},
         {inputs: ["user"], output: "unmapped.user", type: "string"},
         {inputs: ["assignip"], output: "unmapped.assignip", type: "string"},
         {inputs: ["cookies"], output: "unmapped.cookies", type: "string"},
         {inputs: ["locip"], output: "unmapped.locip", type: "string"},
         {inputs: ["locport"], output: "unmapped.locport", type: "string"},
         {inputs: ["outintf"], output: "unmapped.outintf", type: "string"},
         {inputs: ["peer_notif"], output: "unmapped.peer_notif", type: "string"},
         {inputs: ["remip"], output: "unmapped.remip", type: "string"},
         {inputs: ["remport"], output: "unmapped.remport", type: "string"},
         {inputs: ["useralt"], output: "unmapped.useralt", type: "string"},
         {inputs: ["vpntunnel"], output: "unmapped.vpntunnel", type: "string"},
         {inputs: ["xauthgroup"], output: "unmapped.xauthgroup", type: "string"},
         {inputs: ["xauthuser"], output: "unmapped.xauthuser", type: "string"},
         {inputs: ["name"], output: "unmapped.name", type: "string"},
         {inputs: ["cert-type"], output: "unmapped.cert-type", type: "string"},
         {inputs: ["age"], output: "unmapped.age", type: "string"},
         {inputs: ["apscan"], output: "unmapped.apscan", type: "string"},
         {inputs: ["apstatus"], output: "unmapped.apstatus", type: "string"},
         {inputs: ["aptype"], output: "unmapped.aptype", type: "string"},
         {inputs: ["bssid"], output: "unmapped.bssid", type: "string"},
         {inputs: ["channel"], output: "unmapped.channel", type: "string"},
         {inputs: ["detectionmethod"], output: "unmapped.detectionmethod", type: "string"},
         {inputs: ["encryption"], output: "unmapped.encryption", type: "string"},
         {inputs: ["live"], output: "unmapped.live", type: "string"},
         {inputs: ["manuf"], output: "unmapped.manuf", type: "string"},
         {inputs: ["noise"], output: "unmapped.noise", type: "string"},
         {inputs: ["onwire"], output: "unmapped.onwire", type: "string"},
         {inputs: ["radioband"], output: "unmapped.radioband", type: "string"},
         {inputs: ["radioidclosest"], output: "unmapped.radioidclosest", type: "string"},
         {inputs: ["radioiddetected"], output: "unmapped.radioiddetected", type: "string"},
         {inputs: ["rate"], output: "unmapped.rate", type: "string"},
         {inputs: ["security"], output: "unmapped.security", type: "string"},
         {inputs: ["signal"], output: "unmapped.signal", type: "string"},
         {inputs: ["snclosest"], output: "unmapped.snclosest", type: "string"},
         {inputs: ["sndetected"], output: "unmapped.sndetected", type: "string"},
         {inputs: ["ssid"], output: "unmapped.ssid", type: "string"},
         {inputs: ["stacount"], output: "unmapped.stacount", type: "string"},
         {inputs: ["stamac"], output: "unmapped.stamac", type: "string"},
         {inputs: ["userfrom"], output: "unmapped.userfrom", type: "string"},
         {inputs: ["operation"], output: "api.operation", type: "string"},
         {inputs: ["changes"], output: "unmapped.changes", type: "string"},
         {inputs: ["desc"], output: "unmapped.desc", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 99, field: "activity_id"},
         { value: 99, field: "type_uid"},
         { value: 0, field: "class_uid"},
         { value: 0, field: "category_uid"},
         { value: "Base Event", field: "class_name"},
         { value: "Uncategorized", field: "category_name"},
         { value: "Base Event: Other", field: "type_name"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
       ]
     },
     {
       predicate: "subtype='security-rating' or 'ips'",
       copies: [
         {inputs: ["subtype"], output: "event.type", type: "string"},
         {inputs: ["subtype"], output: "activity_name", type: "string"},
         {inputs: ["ocsf_time"], output: "time", type: "int"},
       ],
       renames: [
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["id"], output: "unmapped.id", type: "string"},
         {inputs: ["bid"], output: "unmapped.bid", type: "string"},
         {inputs: ["dvid"], output: "unmapped.dvid", type: "string"},
         {inputs: ["itime"], output: "unmapped.itime", type: "string"},
         {inputs: ["euid"], output: "unmapped.euid", type: "string"},
         {inputs: ["epid"], output: "unmapped.epid", type: "string"},
         {inputs: ["dsteuid"], output: "unmapped.dsteuid", type: "string"},
         {inputs: ["dstepid"], output: "unmapped.dstepid", type: "string"},
         {inputs: ["logver"], output: "metadata.log_version", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["logdesc"], output: "finding.title", type: "string"},
         {inputs: ["auditscore"], output: "unmapped.auditscore", type: "string"},
         {inputs: ["auditreporttype"], output: "unmapped.auditreporttype", type: "string"},
         {inputs: ["criticalcount"], output: "count", type: "string"},
         {inputs: ["audittime"], output: "finding.created_time", type: "string"},
         {inputs: ["auditid"], output: "finding.uid", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["highcount"], output: "unmapped.highcount", type: "string"},
         {inputs: ["mediumcount"], output: "unmapped.mediumcount", type: "string"},
         {inputs: ["lowcount"], output: "unmapped.lowcount", type: "string"},
         {inputs: ["passedcount"], output: "unmapped.passedcount", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["devid"], output: "unmapped.devid", type: "string"},
         {inputs: ["vd"], output: "unmapped.vd", type: "string"},
         {inputs: ["devname"], output: "unmapped.devname", type: "string"},
         {inputs: ["devgrps"], output: "unmapped.devgrps", type: "string"},
         {inputs: ["action"], output: "unmapped.action", type: "string"},
         {inputs: ["attack"], output: "finding.title", type: "string"},
         {inputs: ["attackid"], output: "unmapped.attackid", type: "string"},
         {inputs: ["craction"], output: "unmapped.craction", type: "string"},
         {inputs: ["crlevel"], output: "unmapped.crlevel", type: "string"},
         {inputs: ["crscore"], output: "unmapped.crscore", type: "string"},
         {inputs: ["direction"], output: "unmapped.direction", type: "string"},
         {inputs: ["dstintf"], output: "unmapped.dstintf", type: "string"},
         {inputs: ["dstintfrole"], output: "unmapped.dstintfrole", type: "string"},
         {inputs: ["dstip"], output: "unmapped.dstip", type: "string"},
         {inputs: ["dstport"], output: "unmapped.dstport", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["hostname"], output: "unmapped.hostname", type: "string"},
         {inputs: ["incidentserialno"], output: "unmapped.incidentserialno", type: "string"},
         {inputs: ["policyid"], output: "unmapped.policyid", type: "string"},
         {inputs: ["profile"], output: "unmapped.profile", type: "string"},
         {inputs: ["proto"], output: "unmapped.proto", type: "string"},
         {inputs: ["ref"], output: "finding.src_url", type: "string"},
         {inputs: ["service"], output: "unmapped.service", type: "string"},
         {inputs: ["sessionid"], output: "process.session.uid", type: "string"},
         {inputs: ["srccountry"], output: "unmapped.srccountry", type: "string"},
         {inputs: ["srcintf"], output: "unmapped.srcintf", type: "string"},
         {inputs: ["srcintfrole"], output: "unmapped.srcintfrole", type: "string"},
         {inputs: ["srcip"], output: "unmapped.srcip", type: "string"},
         {inputs: ["srcport"], output: "unmapped.srcport", type: "string"},
         {inputs: ["url"], output: "unmapped.url", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 99, field: "activity_id"},
         { value: 200199, field: "type_uid"},
         { value: 2001, field: "class_uid"},
         { value: 2, field: "category_uid"},
         { value: "Security Finding", field: "class_name"},
         { value: "Findings", field: "category_name"},
         { value: "Security Finding: Other", field: "type_name"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
       ]
     },
     {
       predicate: "subtype='router'",
       copies: [
         {inputs: ["ocsf_time"], output: "time", type: "int"},
       ],
       renames: [
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["vd"], output: "device.domain", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["logdesc"], output: "unmapped.logdesc", type: "string"},
         {inputs: ["msg"], output: "unmapped.msg", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 1, field: "activity_id"},
         { value: "Log", field: "activity_name"},
         { value: "Log", field: "event.type"},
         { value: 500201, field: "type_uid"},
         { value: 5002, field: "class_uid"},
         { value: 5, field: "category_uid"},
         { value: "Device Config State", field: "class_name"},
         { value: "Discovery", field: "category_name"},
         { value: "Device Config State: Other", field: "type_name"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
       ]
     },
     {
       predicate: "subtype = 'gtp-all'",
       copies: [
         {inputs: ["ocsf_time"], output: "time", type: "int"},
         {inputs: ["subtype"], output: "activity_name", type: "string"},
         {inputs: ["subtype"], output: "event.type", type: "string"},
         {inputs: ["to"], output: "observables[0].value", type: "string"},
         {inputs: ["to"], output: "observables[0].name", type: "string"},
         {inputs: ["to"], output: "observables[0].type", type: "string"},
         {inputs: ["to"], output: "observables[0].type_id", type: "int"},
         {inputs: ["from"], output: "observables[1].value", type: "string"},
         {inputs: ["from"], output: "observables[1].name", type: "string"},
         {inputs: ["from"], output: "observables[1].type", type: "string"},
         {inputs: ["from"], output: "observables[1].type_id", type: "int"},
       ]
       renames: [
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["devid"], output: "device.uid", type: "string"},
         {inputs: ["devname"], output: "device.name", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["appid"], output: "unmapped.appid", type: "string"},
         {inputs: ["dstport"], output: "dst_endpoint.port", type: "string"},
         {inputs: ["srcport"], output: "src_endpoint.port", type: "string"},
         {inputs: ["proto"], output: "connection_info.protocol_num", type: "string"},
         {inputs: ["service"], output: "src_endpoint.svc_name", type: "string"},
         {inputs: ["direction"], output: "connection_info.direction", type: "string"},
         {inputs: ["sessionid"], output: "actor.session.uid", type: "string"},
         {inputs: ["app"], output: "app_name", type: "string"},
         {inputs: ["hostname"], output: "device.hostname", type: "string"},
         {inputs: ["msg"], output: "unmapped.msg", type: "string"},
         {inputs: ["vd"], output: "device.domain", type: "string"},
         {inputs: ["policyid"], output: "actor.authorizations[0].policy.uid", type: "string"},
         {inputs: ["apn"], output: "unmapped.apn", type: "string"},
         {inputs: ["from"], output: "dst_endpoint.ip", type: "string"},
         {inputs: ["to"], output: "src_endpoint.ip", type: "string"},
         {inputs: ["imsi"], output: "unmapped.imsi", type: "string"},
         {inputs: ["msg-type"], output: "unmapped.msg-type", type: "string"},
         {inputs: ["msisdn"], output: "unmapped.msisdn", type: "string"},
         {inputs: ["tunnel-idx"], output: "unmapped.tunnel-idx", type: "string"},
         {inputs: ["version"], output: "unmapped.version", type: "string"},
         {inputs: ["status"], output: "status_detail", type: "string"},
         {inputs: ["headerteid"], output: "unmapped.headerteid", type: "string"},
         {inputs: ["kind"], output: "unmapped.kind", type: "string"},
         {inputs: ["epoch"], output: "unmapped.epoch", type: "string"},
         {inputs: ["profile"], output: "unmapped.profile", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 4001, field: "class_uid"},
         { value: 4, field: "category_uid"},
         { value: "Network Activity", field: "class_name"},
         { value: "Network Activity", field: "category_name"},
         { value: 99, field: "activity_id"},
         { value: 400199, field: "type_uid"},
         { value: "Network Activity: Other", field: "type_name"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
         { value: 2, field: "observables[0].type_id"},
         { value: "IP Address", field: "observables[0].type"},
         { value: "src_endpoint.ip", field: "observables[0].name"},
         { value: 2, field: "observables[1].type_id"},
         { value: "IP Address", field: "observables[1].type"},
         { value: "dst_endpoint.ip", field: "observables[1].name"},
       ]
     },
     {
       predicate: "subtype='app-ctrl' or 'file-filter' or 'ssl' or 'voip' or 'icap'",
       copies: [
         {inputs: ["ocsf_time"], output: "time", type: "int"},
         {inputs: ["action"], output: "activity_name", type: "string"},
         {inputs: ["action"], output: "event.type", type: "string"},
         {inputs: ["srcip"], output: "observables[0].value", type: "string"},
         {inputs: ["srcip"], output: "observables[0].name", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type_id", type: "int"},
         {inputs: ["dstip"], output: "observables[1].value", type: "string"},
         {inputs: ["dstip"], output: "observables[1].name", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type_id", type: "int"},
       ]
       renames: [
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["devid"], output: "device.uid", type: "string"},
         {inputs: ["devname"], output: "device.name", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["appid"], output: "unmapped.appid", type: "string"},
         {inputs: ["dstip"], output: "dst_endpoint.ip", type: "string"},
         {inputs: ["srcip"], output: "src_endpoint.ip", type: "string"},
         {inputs: ["dstport"], output: "dst_endpoint.port", type: "string"},
         {inputs: ["srcport"], output: "src_endpoint.port", type: "string"},
         {inputs: ["dstintf"], output: "dst_endpoint.interface_name", type: "string"},
         {inputs: ["srcintf"], output: "src_endpoint.interface_name", type: "string"},
         {inputs: ["srcintfrole"], output: "unmapped.srcintfrole", type: "string"},
         {inputs: ["dstintfrole"], output: "unmapped.dstintfrole", type: "string"},
         {inputs: ["proto"], output: "connection_info.protocol_num", type: "string"},
         {inputs: ["service"], output: "src_endpoint.svc_name", type: "string"},
         {inputs: ["direction"], output: "connection_info.direction", type: "string"},
         {inputs: ["sessionid"], output: "actor.session.uid", type: "string"},
         {inputs: ["applist"], output: "unmapped.applist", type: "string"},
         {inputs: ["appcat"], output: "actor.invoked_by", type: "string"},
         {inputs: ["app"], output: "app_name", type: "string"},
         {inputs: ["hostname"], output: "device.hostname", type: "string"},
         {inputs: ["incidentserialno"], output: "unmapped.incidentserialno", type: "string"},
         {inputs: ["url"], output: "unmapped.url", type: "string"},
         {inputs: ["msg"], output: "unmapped.msg", type: "string"},
         {inputs: ["apprisk"], output: "risk_level", type: "string"},
         {inputs: ["scertcname"], output: "tls.certificate.subject", type: "string"},
         {inputs: ["scertissuer"], output: "tls.certificate.issuer", type: "string"},
         {inputs: ["vd"], output: "device.domain", type: "string"},
         {inputs: ["filename"], output: "actor.process.file.name", type: "string"},
         {inputs: ["filesize"], output: "actor.process.file.size", type: "string"},
         {inputs: ["filetype"], output: "actor.process.file.type", type: "string"},
         {inputs: ["filtername"], output: "unmapped.filtername", type: "string"},
         {inputs: ["policyid"], output: "actor.authorizations[0].policy.uid", type: "string"},
         {inputs: ["profile"], output: "unmapped.profile", type: "string"},
         {inputs: ["apn"], output: "unmapped.apn", type: "string"},
         {inputs: ["from"], output: "unmapped.from", type: "string"},
         {inputs: ["to"], output: "unmapped.to", type: "string"},
         {inputs: ["imsi"], output: "unmapped.imsi", type: "string"},
         {inputs: ["msg-type"], output: "unmapped.msg-type", type: "string"},
         {inputs: ["msisdn"], output: "unmapped.msisdn", type: "string"},
         {inputs: ["tunnel-idx"], output: "unmapped.tunnel-idx", type: "string"},
         {inputs: ["version"], output: "unmapped.version", type: "string"},
         {inputs: ["status"], output: "status_detail", type: "string"},
         {inputs: ["headerteid"], output: "unmapped.headerteid", type: "string"},
         {inputs: ["call_id"], output: "unmapped.call_id", type: "string"},
         {inputs: ["voip_proto"], output: "unmapped.voip_proto", type: "string"},
         {inputs: ["kind"], output: "unmapped.kind", type: "string"},
         {inputs: ["epoch"], output: "unmapped.epoch", type: "string"},
         {inputs: ["reason"], output: "unmapped.reason", type: "string"},
         {inputs: ["dir"], output: "connection_info.direction", type: "string"},
         {inputs: ["event_id"], output: "unmapped.event_id", type: "string"},
         {inputs: ["action"], output: "unmapped.action", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 4001, field: "class_uid"},
         { value: 4, field: "category_uid"},
         { value: "Network Activity", field: "class_name"},
         { value: "Network Activity", field: "category_name"},
         {value: 99, field: "activity_id"}
         {value: 400199, field: "type_uid"}
         {value: "Network Activity: Other", field: "type_name"}
         {value: "Open", field: "activity_name", predicate: "unmapped.action = 'permit'"},
         {value: "Open", field: "activity_name", predicate: "unmapped.action = 'accept'"},
         {value: "Close", field: "activity_name", predicate: "unmapped.action = 'dropped'"},
         {value: "Close", field: "activity_name", predicate: "unmapped.action = 'close'"},
         {value: "Close", field: "activity_name", predicate: "unmapped.action = 'shutdown'"},
         {value: "Reset", field: "activity_name", predicate: "unmapped.action = 'clear_session'"},
         {value: "Refuse", field: "activity_name", predicate: "unmapped.action = 'block'"},
         {value: "Refuse", field: "activity_name", predicate: "unmapped.action = 'blocked'"},
         {value: "Network Activity: Open", field: "type_name", predicate: "activity_name = 'Open'"},
         {value: "Network Activity: Close", field: "type_name", predicate: "activity_name = 'Close'"},
         {value: "Network Activity: Reset", field: "type_name", predicate: "activity_name = 'Reset'"},
         {value: "Network Activity: Refuse", field: "type_name", predicate: "activity_name = 'Refuse'"},
         {value: "Open", field: "event.type", predicate: "activity_name = 'Open'"},
         {value: "Close", field: "event.type", predicate: "activity_name = 'Close'"},
         {value: "Reset", field: "event.type", predicate: "activity_name = 'Reset'"},
         {value: "Refuse", field: "event.type", predicate: "activity_name = 'Refuse'"},
         {value: 1, field: "activity_id", predicate: "activity_name = 'Open'"},
         {value: 2, field: "activity_id", predicate: "activity_name = 'Close'"},
         {value: 3, field: "activity_id", predicate: "activity_name = 'Reset'"},
         {value: 5, field: "activity_id", predicate: "activity_name = 'Refuse'"},
         {value: 400101, field: "type_uid", predicate: "activity_name = 'Open'"},
         {value: 400102, field: "type_uid", predicate: "activity_name = 'Close'"},
         {value: 400103, field: "type_uid", predicate: "activity_name = 'Reset'"},
         {value: 400105, field: "type_uid", predicate: "activity_name = 'Refuse'"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
         { value: 2, field: "observables[0].type_id"},
         { value: "IP Address", field: "observables[0].type"},
         { value: "src_endpoint.ip", field: "observables[0].name"},
         { value: 2, field: "observables[1].type_id"},
         { value: "IP Address", field: "observables[1].type"},
         { value: "dst_endpoint.ip", field: "observables[1].name"},
       ]
     },
     {
       predicate: "subtype='virus'",
       copies: [
         {inputs: ["subtype"], output: "activity_name", type: "string"},
         {inputs: ["subtype"], output: "event.type", type: "string"},
         {inputs: ["ocsf_time"], output: "time", type: "int"},
         {inputs: ["srcip"], output: "observables[0].value", type: "string"},
         {inputs: ["srcip"], output: "observables[0].name", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type_id", type: "int"},
         {inputs: ["dstip"], output: "observables[1].value", type: "string"},
         {inputs: ["dstip"], output: "observables[1].name", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type_id", type: "int"},
         {inputs: ["filename"], output: "observables[2].value", type: "string"},
         {inputs: ["filename"], output: "observables[2].name", type: "string"},
         {inputs: ["filename"], output: "observables[2].type", type: "string"},
         {inputs: ["filename"], output: "observables[2].type_id", type: "int"},
         
       ],
       renames: [
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["vd"], output: "unmapped.vd", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["logdesc"], output: "unmapped.logdesc", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["tz"], output: "unmapped.timezone_offset", type: "string"},
         {inputs: ["sessionid"], output: "process.session.uid", type: "string"},
         {inputs: ["service"], output: "unmapped.service", type: "string"},
         {inputs: ["profile"], output: "unmapped.profile", type: "string"},
         {inputs: ["srcip"], output: "unmapped.srcip", type: "string"},
         {inputs: ["dstip"], output: "unmapped.dstip", type: "string"},
         {inputs: ["srcintf"], output: "unmapped.srcintf", type: "string"},
         {inputs: ["srcintfrole"], output: "unmapped.srcintfrole", type: "string"},
         {inputs: ["dstintf"], output: "unmapped.dstintf", type: "string"},
         {inputs: ["dstintfrole"], output: "unmapped.dstintfrole", type: "string"},
         {inputs: ["proto"], output: "unmapped.proto", type: "string"},
         {inputs: ["srccountry"], output: "unmapped.srccountry", type: "string"},
         {inputs: ["action"], output: "status_detail", type: "string"},
         {inputs: ["icmpid"], output: "unmapped.icmpid", type: "string"},
         {inputs: ["icmptype"], output: "unmapped.icmptype", type: "string"},
         {inputs: ["attackid"], output: "unmapped.attackid", type: "string"},
         {inputs: ["icmpcode"], output: "unmapped.icmpcode", type: "string"},
         {inputs: ["policyid"], output: "unmapped.policyid", type: "string"},
         {inputs: ["policytype"], output: "unmapped.policytype", type: "string"},
         {inputs: ["ref"], output: "unmapped.ref", type: "string"},
         {inputs: ["attack"], output: "finding.desc", type: "string"},
         {inputs: ["msg"], output: "finding.title", type: "string"},
         {inputs: ["crscore"], output: "risk_score", type: "string"},
         {inputs: ["craction"], output: "unmapped.craction", type: "string"},
         {inputs: ["crlevel"], output: "unmapped.crlevel", type: "string"},
         {inputs: ["virusid"], output: "malware[0].uid", type: "string"},
         {inputs: ["virus"], output: "malware[0].name", type: "string"},
         {inputs: ["analyticscksum"], output: "process.file.hashes[0].value", type: "string"},
         {inputs: ["agent"], output: "unmapped.agent", type: "string"},
         {inputs: ["analyticssubmit"], output: "unmapped.analyticssubmit", type: "string"},
         {inputs: ["direction"], output: "unmapped.direction", type: "string"},
         {inputs: ["dstport"], output: "unmapped.dstport", type: "string"},
         {inputs: ["filename"], output: "process.file.name", type: "string"},
         {inputs: ["quarskip"], output: "unmapped.quarskip", type: "string"},
         {inputs: ["srcport"], output: "unmapped.srcport", type: "string"},
         {inputs: ["url"], output: "finding.src_url", type: "string"},
         {inputs: ["dtype"], output: "malware[0].classifications", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 99, field: "activity_id"},
         { value: 200199, field: "type_uid"},
         { value: 2001, field: "class_uid"},
         { value: 2, field: "category_uid"},
         { value: "Security Finding", field: "class_name"},
         { value: "Findings", field: "category_name"},
         { value: "Security Finding: Other", field: "type_name"},
         { value: 2, field: "observables[0].type_id"},
         { value: "IP Address", field: "observables[0].type"},
         { value: "src_endpoint.ip", field: "observables[0].name"},
         { value: 2, field: "observables[1].type_id"},
         { value: "IP Address", field: "observables[1].type"},
         { value: "dst_endpoint.ip", field: "observables[1].name"},
         { value: 7, field: "observables[2].type_id"},
         { value: "File Name", field: "observables[2].type"},
         { value: "process.file.name", field: "observables[2].name"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
       ]
     },
     {
       predicate: "subtype='anomaly'",
       copies: [
         {inputs: ["subtype"], output: "activity_name", type: "string"},
         {inputs: ["subtype"], output: "event.type", type: "string"},
         {inputs: ["ocsf_time"], output: "time", type: "int"},
         {inputs: ["srcip"], output: "observables[0].value", type: "string"},
         {inputs: ["srcip"], output: "observables[0].name", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type_id", type: "int"},
         {inputs: ["dstip"], output: "observables[1].value", type: "string"},
         {inputs: ["dstip"], output: "observables[1].name", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type_id", type: "int"},
       ],
       renames: [
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["vd"], output: "unmapped.vd", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["logdesc"], output: "unmapped.logdesc", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["tz"], output: "unmapped.timezone_offset", type: "string"},
         {inputs: ["sessionid"], output: "process.session.uid", type: "string"},
         {inputs: ["service"], output: "unmapped.service", type: "string"},
         {inputs: ["profile"], output: "unmapped.profile", type: "string"},
         {inputs: ["srcip"], output: "unmapped.srcip", type: "string"},
         {inputs: ["dstip"], output: "unmapped.dstip", type: "string"},
         {inputs: ["srcintf"], output: "unmapped.srcintf", type: "string"},
         {inputs: ["srcintfrole"], output: "unmapped.srcintfrole", type: "string"},
         {inputs: ["dstintf"], output: "unmapped.dstintf", type: "string"},
         {inputs: ["dstintfrole"], output: "unmapped.dstintfrole", type: "string"},
         {inputs: ["proto"], output: "unmapped.proto", type: "string"},
         {inputs: ["srccountry"], output: "unmapped.srccountry", type: "string"},
         {inputs: ["action"], output: "status_detail", type: "string"},
         {inputs: ["icmpid"], output: "unmapped.icmpid", type: "string"},
         {inputs: ["icmptype"], output: "unmapped.icmptype", type: "string"},
         {inputs: ["attackid"], output: "unmapped.attackid", type: "string"},
         {inputs: ["icmpcode"], output: "unmapped.icmpcode", type: "string"},
         {inputs: ["policyid"], output: "unmapped.policyid", type: "string"},
         {inputs: ["policytype"], output: "unmapped.policytype", type: "string"},
         {inputs: ["ref"], output: "finding.src_url", type: "string"},
         {inputs: ["attack"], output: "finding.title", type: "string"},
         {inputs: ["msg"], output: "finding.desc", type: "string"},
         {inputs: ["crscore"], output: "risk_score", type: "string"},
         {inputs: ["craction"], output: "unmapped.craction", type: "string"},
         {inputs: ["crlevel"], output: "unmapped.crlevel", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 99, field: "activity_id"},
         { value: 200199, field: "type_uid"},
         { value: 2001, field: "class_uid"},
         { value: 2, field: "category_uid"},
         { value: "Security Finding", field: "class_name"},
         { value: "Findings", field: "category_name"},
         { value: "Security Finding: Other", field: "type_name"},
         { value: 2, field: "observables[0].type_id"},
         { value: "IP Address", field: "observables[0].type"},
         { value: "src_endpoint.ip", field: "observables[0].name"},
         { value: 2, field: "observables[1].type_id"},
         { value: "IP Address", field: "observables[1].type"},
         { value: "dst_endpoint.ip", field: "observables[1].name"},
         { value: 1, field: "severity_id", predicate: "severity = 'information'" },
         { value: 2, field: "severity_id", predicate: "severity = 'low'" },
         { value: 3, field: "severity_id", predicate: "severity = 'medium'" },
         { value: 4, field: "severity_id", predicate: "severity = 'high'" },
         { value: 5, field: "severity_id", predicate: "severity = 'critical'" },
         { value: 6, field: "severity_id", predicate: "severity = 'fatal'" },
       ]
     },
     {
       predicate: "subtype='dlp' or 'waf' or 'webfilter'",
       copies: [
         {inputs: ["subtype"], output: "activity_name", type: "string"},
         {inputs: ["subtype"], output: "event.type", type: "string"},
         {inputs: ["ocsf_time"], output: "time", type: "int"},
         {inputs: ["srcip"], output: "observables[0].value", type: "string"},
         {inputs: ["srcip"], output: "observables[0].name", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type_id", type: "int"},
         {inputs: ["dstip"], output: "observables[1].value", type: "string"},
         {inputs: ["dstip"], output: "observables[1].name", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type_id", type: "int"},
         {inputs: ["url"], output: "observables[2].value", type: "string"},
         {inputs: ["url"], output: "observables[2].name", type: "string"},
         {inputs: ["url"], output: "observables[2].type", type: "string"},
         {inputs: ["url"], output: "observables[2].type_id", type: "int"},
       ],
       renames: [
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["devid"], output: "device.uid", type: "string"},
         {inputs: ["devname"], output: "device.name", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["filteridx"], output: "unmapped.filteridx", type: "string"},
         {inputs: ["dlpextra"], output: "unmapped.dlpextra", type: "string"},
         {inputs: ["filtertype"], output: "unmapped.filtertype", type: "string"},
         {inputs: ["filtercat"], output: "unmapped.filtercat", type: "string"},
         {inputs: ["policyid"], output: "actor.authorizations[0].policy.uid", type: "string"},
         {inputs: ["sessionid"], output: "actor.session.uid", type: "string"},
         {inputs: ["epoch"], output: "unmapped.epoch", type: "string"},
         {inputs: ["eventid"], output: "unmapped.eventid", type: "string"},
         {inputs: ["user"], output: "actor.user.name", type: "string"},
         {inputs: ["dstip"], output: "dst_endpoint.ip", type: "string"},
         {inputs: ["srcip"], output: "src_endpoint.ip", type: "string"},
         {inputs: ["dstport"], output: "dst_endpoint.port", type: "string"},
         {inputs: ["srcport"], output: "src_endpoint.port", type: "string"},
         {inputs: ["dstintf"], output: "dst_endpoint.interface_name", type: "string"},
         {inputs: ["srcintf"], output: "src_endpoint.interface_name", type: "string"},
         {inputs: ["srcintfrole"], output: "unmapped.srcintfrole", type: "string"},
         {inputs: ["dstintfrole"], output: "unmapped.dstintfrole", type: "string"},
         {inputs: ["proto"], output: "connection_info.protocol_num", type: "string"},
         {inputs: ["service"], output: "src_endpoint.svc_name", type: "string"},
         {inputs: ["direction"], output: "connection_info.direction", type: "string"},
         {inputs: ["filetype"], output: "unmapped.filetype", type: "string"},
         {inputs: ["action"], output: "unmapped.action", type: "string"},
         {inputs: ["hostname"], output: "device.hostname", type: "string"},
         {inputs: ["url"], output: "http_request.url.url_string", type: "string"},
         {inputs: ["agent"], output: "http_request.user_agent", type: "string"},
         {inputs: ["filename"], output: "unmapped.filename", type: "string"},
         {inputs: ["filesize"], output: "unmapped.filesize", type: "string"},
         {inputs: ["profile"], output: "unmapped.profile", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["policytype"], output: "unmapped.policytype", type: "string"},
         {inputs: ["srccountry"], output: "src_endpoint.location.country", type: "string"},
         {inputs: ["dstcountry"], output: "dst_endpoint.location.country", type: "string"},
         {inputs: ["forwardedfor"], output: "http_request.x_forwarded_for", type: "string"},
         {inputs: ["httpmethod"], output: "http_request.http_method", type: "string"},
         {inputs: ["referralurl"], output: "http_request.referrer", type: "string"},
         {inputs: ["rawdata"], output: "unmapped.rawdata", type: "string"},
         {inputs: ["vd"], output: "device.domain", type: "string"},
         {inputs: ["msg"], output: "unmapped.msg", type: "string"},
         {inputs: ["constraint"], output: "unmapped.constraint", type: "string"},
         {inputs: ["cat"], output: "unmapped.cat", type: "string"},
         {inputs: ["catdesc"], output: "http_request.url.categories", type: "string"},
         {inputs: ["crscore"], output: "unmapped.crscore", type: "string"},
         {inputs: ["craction"], output: "unmapped.craction", type: "string"},
         {inputs: ["crlevel"], output: "unmapped.crlevel", type: "string"},
         {inputs: ["method"], output: "unmapped.method", type: "string"},
         {inputs: ["rcvdbyte"], output: "traffic.bytes_in", type: "string"},
         {inputs: ["sentbyte"], output: "traffic.bytes_out", type: "string"},
         {inputs: ["reqtype"], output: "unmapped.reqtype", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 99, field: "connection_info.direction_id"},
         { value: 99, field: "disposition_id"},
         { value: 99, field: "activity_id"},
         { value: 400299, field: "type_uid"},
         { value: 4002, field: "class_uid"},
         { value: 4, field: "category_uid"},
         { value: "HTTP Activity", field: "class_name"},
         { value: "Network Activity", field: "category_name"},
         { value: "HTTP Activity: Other", field: "type_name"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
         { value: 2, field: "observables[0].type_id"},
         { value: "IP Address", field: "observables[0].type"},
         { value: "src_endpoint.ip", field: "observables[0].name"},
         { value: 2, field: "observables[1].type_id"},
         { value: "IP Address", field: "observables[1].type"},
         { value: "dst_endpoint.ip", field: "observables[1].name"},
         { value: 6, field: "observables[2].type_id"},
         { value: "URL String", field: "observables[2].type"},
         { value: "http_request.url.url_string", field: "observables[2].name"},
       ]
     },
     {
       predicate: "subtype='dns'",
       copies: [
         {inputs: ["ocsf_time"], output: "time", type: "int"},
         {inputs: ["srcip"], output: "observables[0].value", type: "string"},
         {inputs: ["srcip"], output: "observables[0].name", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type_id", type: "int"},
         {inputs: ["dstip"], output: "observables[1].value", type: "string"},
         {inputs: ["dstip"], output: "observables[1].name", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type_id", type: "int"},
         {inputs: ["qname"], output: "observables[2].value", type: "string"},
         {inputs: ["qname"], output: "observables[2].name", type: "string"},
         {inputs: ["qname"], output: "observables[2].type", type: "string"},
         {inputs: ["qname"], output: "observables[2].type_id", type: "int"},
       ],
       renames: [
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["devid"], output: "device.uid", type: "string"},
         {inputs: ["devname"], output: "device.name", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["policyid"], output: "actor.authorizations[0].policy.uid", type: "string"},
         {inputs: ["sessionid"], output: "actor.session.uid", type: "string"},
         {inputs: ["epoch"], output: "unmapped.epoch", type: "string"},
         {inputs: ["eventid"], output: "unmapped.eventid", type: "string"},
         {inputs: ["user"], output: "actor.user.name", type: "string"},
         {inputs: ["dstip"], output: "dst_endpoint.ip", type: "string"},
         {inputs: ["srcip"], output: "src_endpoint.ip", type: "string"},
         {inputs: ["dstport"], output: "dst_endpoint.port", type: "string"},
         {inputs: ["srcport"], output: "src_endpoint.port", type: "string"},
         {inputs: ["dstintf"], output: "dst_endpoint.interface_name", type: "string"},
         {inputs: ["srcintf"], output: "src_endpoint.interface_name", type: "string"},
         {inputs: ["srcintfrole"], output: "unmapped.srcintfrole", type: "string"},
         {inputs: ["dstintfrole"], output: "unmapped.dstintfrole", type: "string"},
         {inputs: ["proto"], output: "connection_info.protocol_num", type: "string"},
         {inputs: ["service"], output: "src_endpoint.svc_name", type: "string"},
         {inputs: ["direction"], output: "connection_info.direction", type: "string"},
         {inputs: ["filetype"], output: "unmapped.filetype", type: "string"},
         {inputs: ["action"], output: "unmapped.action", type: "string"},
         {inputs: ["hostname"], output: "device.hostname", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["policytype"], output: "unmapped.policytype", type: "string"},
         {inputs: ["srccountry"], output: "src_endpoint.location.country", type: "string"},
         {inputs: ["dstcountry"], output: "dst_endpoint.location.country", type: "string"},
         {inputs: ["vd"], output: "device.domain", type: "string"},
         {inputs: ["srcmac"], output: "src_endpoint.mac", type: "string"},
         {inputs: ["xid"], output: "query.packet_uid", type: "string"},
         {inputs: ["qname"], output: "query.hostname", type: "string"},
         {inputs: ["qtype"], output: "query.type", type: "string"},
         {inputs: ["qtypeval"], output: "query.opcode", type: "string"},
         {inputs: ["qclass"], output: "query.class", type: "string"},
         {inputs: ["ipaddr"], output: "answer.rdata", type: "string"},
         {inputs: ["error"], output: "unmapped.error", type: "string"},
         {inputs: ["cat"], output: "unmapped.cat", type: "string"},
         {inputs: ["catdesc"], output: "unmapped.catdesc", type: "string"},
         {inputs: ["profile"], output: "unmapped.profile", type: "string"},
         {inputs: ["msg"], output: "answer.type", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 99, field: "connection_info.direction_id"},
         { value: 2, field: "observables[0].type_id"},
         { value: "IP Address", field: "observables[0].type"},
         { value: "src_endpoint.ip", field: "observables[0].name"},
         { value: 2, field: "observables[1].type_id"},
         { value: "IP Address", field: "observables[1].type"},
         { value: "dst_endpoint.ip", field: "observables[1].name"},
         { value: 1, field: "observables[2].type_id"},
         { value: "Hostname", field: "observables[2].type"},
         { value: "query.hostname", field: "observables[2].name"},
         {value: "Query", field: "activity_name", predicate: "unmapped.eventtype = 'dns-query'"},
         {value: "Response", field: "activity_name", predicate: "unmapped.eventtype = 'dns-response'"},
         {value: "DNS Activity: Query", field: "type_name", predicate: "activity_name = 'Query'"},
         {value: "DNS Activity: Response", field: "type_name", predicate: "activity_name = 'Response'"},
         {value: 1, field: "activity_id", predicate: "activity_name = 'Query'"},
         {value: 2, field: "activity_id", predicate: "activity_name = 'Response'"},
         {value: "Query", field: "event.type", predicate: "activity_name = 'Query'"},
         {value: "Response", field: "event.type", predicate: "activity_name = 'Response'"},
         {value: 400301, field: "type_uid", predicate: "activity_name = 'Query'"},
         {value: 400302, field: "type_uid", predicate: "activity_name = 'Response'"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
       ]
     },
     {
       predicate: "subtype = 'ssh'",
       copies: [
         {inputs: ["ocsf_time"], output: "time", type: "int"},
         {inputs: ["action"], output: "activity_name", type: "string"},
         {inputs: ["action"], output: "event.type", type: "string"},
         {inputs: ["srcip"], output: "observables[0].value", type: "string"},
         {inputs: ["srcip"], output: "observables[0].name", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type", type: "string"},
         {inputs: ["srcip"], output: "observables[0].type_id", type: "int"},
         {inputs: ["dstip"], output: "observables[1].value", type: "string"},
         {inputs: ["dstip"], output: "observables[1].name", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type", type: "string"},
         {inputs: ["dstip"], output: "observables[1].type_id", type: "int"},
       ],
       renames: [
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["devid"], output: "device.uid", type: "string"},
         {inputs: ["devname"], output: "device.name", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["policyid"], output: "actor.authorizations[0].policy.uid", type: "string"},
         {inputs: ["sessionid"], output: "actor.session.uid", type: "string"},
         {inputs: ["epoch"], output: "unmapped.epoch", type: "string"},
         {inputs: ["eventid"], output: "unmapped.eventid", type: "string"},
         {inputs: ["user"], output: "actor.user.name", type: "string"},
         {inputs: ["dstip"], output: "dst_endpoint.ip", type: "string"},
         {inputs: ["srcip"], output: "src_endpoint.ip", type: "string"},
         {inputs: ["dstport"], output: "dst_endpoint.port", type: "string"},
         {inputs: ["srcport"], output: "src_endpoint.port", type: "string"},
         {inputs: ["dstintf"], output: "dst_endpoint.interface_name", type: "string"},
         {inputs: ["srcintf"], output: "src_endpoint.interface_name", type: "string"},
         {inputs: ["srcintfrole"], output: "unmapped.srcintfrole", type: "string"},
         {inputs: ["dstintfrole"], output: "unmapped.dstintfrole", type: "string"},
         {inputs: ["proto"], output: "connection_info.protocol_num", type: "string"},
         {inputs: ["service"], output: "src_endpoint.svc_name", type: "string"},
         {inputs: ["direction"], output: "connection_info.direction", type: "string"},
         {inputs: ["filetype"], output: "unmapped.filetype", type: "string"},
         {inputs: ["action"], output: "unmapped.action", type: "string"},
         {inputs: ["hostname"], output: "device.hostname", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["policytype"], output: "unmapped.policytype", type: "string"},
         {inputs: ["srccountry"], output: "src_endpoint.location.country", type: "string"},
         {inputs: ["dstcountry"], output: "dst_endpoint.location.country", type: "string"},
         {inputs: ["vd"], output: "device.domain", type: "string"},
         {inputs: ["srcmac"], output: "src_endpoint.mac", type: "string"},
         {inputs: ["cat"], output: "unmapped.cat", type: "string"},
         {inputs: ["catdesc"], output: "unmapped.catdesc", type: "string"},
         {inputs: ["profile"], output: "unmapped.profile", type: "string"},
         {inputs: ["msg"], output: "unmapped.msg", type: "string"},
         {inputs: ["login"], output: "actor.user.name", type: "string"},
         {inputs: ["channeltype"], output: "unmapped.channeltype", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 99, field: "connection_info.direction_id"},
         {value: 99, field: "activity_id"},
         {value: 400799, field: "type_uid"},
         {value: 4007, field: "class_uid"},
         {value: 4, field: "category_uid"},
         {value: "SSH Activity: Open", field: "type_name"},
         {value: "SSH Activity", field: "class_name"},
         {value: "Network Activity", field: "category_name"},
         {value: "Open", field: "activity_name", predicate: "unmapped.action = 'permit'"},
         {value: "Open", field: "activity_name", predicate: "unmapped.action = 'accept'"},
         {value: "Close", field: "activity_name", predicate: "unmapped.action = 'dropped'"},
         {value: "Close", field: "activity_name", predicate: "unmapped.action = 'close'"},
         {value: "Close", field: "activity_name", predicate: "unmapped.action = 'shutdown'"},
         {value: "Reset", field: "activity_name", predicate: "unmapped.action = 'clear_session'"},
         {value: "Refuse", field: "activity_name", predicate: "unmapped.action = 'block'"},
         {value: "Refuse", field: "activity_name", predicate: "unmapped.action = 'blocked'"},
         {value: "SSH Activity: Open", field: "type_name", predicate: "activity_name = 'Open'"},
         {value: "SSH Activity: Close", field: "type_name", predicate: "activity_name = 'Close'"},
         {value: "SSH Activity: Reset", field: "type_name", predicate: "activity_name = 'Reset'"},
         {value: "SSH Activity: Refuse", field: "type_name", predicate: "activity_name = 'Refuse'"},
         {value: "Open", field: "event.type", predicate: "activity_name = 'Open'"},
         {value: "Close", field: "event.type", predicate: "activity_name = 'Close'"},
         {value: "Reset", field: "event.type", predicate: "activity_name = 'Reset'"},
         {value: "Refuse", field: "event.type", predicate: "activity_name = 'Refuse'"},
         {value: 1, field: "activity_id", predicate: "activity_name = 'Open'"},
         {value: 2, field: "activity_id", predicate: "activity_name = 'Close'"},
         {value: 3, field: "activity_id", predicate: "activity_name = 'Reset'"},
         {value: 5, field: "activity_id", predicate: "activity_name = 'Refuse'"},
         {value: 400701, field: "type_uid", predicate: "activity_name = 'Open'"},
         {value: 400702, field: "type_uid", predicate: "activity_name = 'Close'"},
         {value: 400703, field: "type_uid", predicate: "activity_name = 'Reset'"},
         {value: 400705, field: "type_uid", predicate: "activity_name = 'Refuse'"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
         { value: 2, field: "observables[0].type_id"},
         { value: "IP Address", field: "observables[0].type"},
         { value: "src_endpoint.ip", field: "observables[0].name"},
         { value: 2, field: "observables[1].type_id"},
         { value: "IP Address", field: "observables[1].type"},
         { value: "dst_endpoint.ip", field: "observables[1].name"},
       ]
     },
     {
       predicate: "type = 'event'",
       copies: [
         {inputs: ["subtype"], output: "event.type", type: "string"},
         {inputs: ["subtype"], output: "activity_name", type: "string"},
         {inputs: ["ocsf_time"], output: "time", type: "int"},
       ],
       renames: [
         {inputs: ["subtype"], output: "metadata.log_name", type: "string"},
         {inputs: ["date"], output: "unmapped.date", type: "string"},
         {inputs: ["id"], output: "unmapped.id", type: "string"},
         {inputs: ["bid"], output: "unmapped.bid", type: "string"},
         {inputs: ["dvid"], output: "unmapped.dvid", type: "string"},
         {inputs: ["itime"], output: "unmapped.itime", type: "string"},
         {inputs: ["euid"], output: "unmapped.euid", type: "string"},
         {inputs: ["epid"], output: "unmapped.epid", type: "string"},
         {inputs: ["logid"], output: "metadata.uid", type: "string"},
         {inputs: ["type"], output: "unmapped.type", type: "string"},
         {inputs: ["level"], output: "unmapped.level", type: "string"},
         {inputs: ["vd"], output: "unmapped.vd", type: "string"},
         {inputs: ["eventtime"], output: "metadata.original_time", type: "string"},
         {inputs: ["logdesc"], output: "unmapped.logdesc", type: "string"},
         {inputs: ["msg"], output: "unmapped.msg", type: "string"},
         {inputs: ["dsteuid"], output: "unmapped.dsteuid", type: "string"},
         {inputs: ["dstepid"], output: "unmapped.dstepid", type: "string"},
         {inputs: ["devid"], output: "unmapped.devid", type: "string"},
         {inputs: ["addr"], output: "unmapped.addr", type: "string"},
         {inputs: ["devgrps"], output: "unmapped.devgrps", type: "string"},
         {inputs: ["devname"], output: "unmapped.devname", type: "string"},
         {inputs: ["logver"], output: "metadata.log_version", type: "string"},
         {inputs: ["tz"], output: "timezone_offset", type: "string"},
         {inputs: ["evname"], output: "unmapped.evname", type: "string"},
         {inputs: ["ha_role"], output: "unmapped.ha_role", type: "string"},
         {inputs: ["hostname"], output: "unmapped.hostname", type: "string"},
         {inputs: ["sn"], output: "unmapped.sn", type: "string"},
         {inputs: ["vcluster"], output: "unmapped.vcluster", type: "string"},
         {inputs: ["vcluster_member"], output: "unmapped.vcluster_member", type: "string"},
         {inputs: ["vcluster_state"], output: "unmapped.vcluster_state", type: "string"},
         {inputs: ["eventtype"], output: "unmapped.eventtype", type: "string"},
         {inputs: ["healthcheck"], output: "unmapped.healthcheck", type: "string"},
         {inputs: ["inbandwidth"], output: "unmapped.inbandwidth", type: "string"},
         {inputs: ["interface"], output: "unmapped.interface", type: "string"},
         {inputs: ["jitter"], output: "unmapped.jitter", type: "string"},
         {inputs: ["latency"], output: "unmapped.latency", type: "string"},
         {inputs: ["metric"], output: "unmapped.metric", type: "string"},
         {inputs: ["outbandwidth"], output: "unmapped.outbandwidth", type: "string"},
         {inputs: ["packetloss"], output: "unmapped.packetloss", type: "string"},
         {inputs: ["slamap"], output: "unmapped.slamap", type: "string"},
         {inputs: ["slatargetid"], output: "unmapped.slatargetid", type: "string"},
         {inputs: ["status"], output: "status_detail", type: "string"},
         {inputs: ["bibandwidth"], output: "unmapped.bibandwidth", type: "string"},
         {inputs: ["from"], output: "unmapped.from", type: "string"},
         {inputs: ["stitch"], output: "unmapped.stitch", type: "string"},
         {inputs: ["stitchaction"], output: "unmapped.stitchaction", type: "string"},
         {inputs: ["trigger"], output: "unmapped.trigger", type: "string"},
         {inputs: ["reason"], output: "unmapped.reason", type: "string"},
         {inputs: ["duration"], output: "unmapped.duration", type: "string"},
         {inputs: ["dstip"], output: "unmapped.dstip", type: "string"},
         {inputs: ["srcip"], output: "unmapped.srcip", type: "string"},
         {inputs: ["method"], output: "unmapped.method", type: "string"},
         {inputs: ["cfgattr"], output: "unmapped.cfgattr", type: "string"},
         {inputs: ["cfgpath"], output: "unmapped.cfgpath", type: "string"},
         {inputs: ["cfgtid"], output: "unmapped.cfgtid", type: "string"},
         {inputs: ["used"], output: "unmapped.used", type: "string"},
         {inputs: ["total"], output: "unmapped.total", type: "string"},
         {inputs: ["freediskstorage"], output: "unmapped.freediskstorage", type: "string"},
         {inputs: ["disklograte"], output: "unmapped.disklograte", type: "string"},
         {inputs: ["fazlograte"], output: "unmapped.fazlograte", type: "string"},
         {inputs: ["trate"], output: "unmapped.trate", type: "string"},
         {inputs: ["waninfo"], output: "unmapped.waninfo", type: "string"},
         {inputs: ["ui"], output: "unmapped.ui", type: "string"},
         {inputs: ["setuprate"], output: "unmapped.setuprate", type: "string"},
         {inputs: ["disk"], output: "unmapped.disk", type: "string"},
         {inputs: ["mem"], output: "unmapped.mem", type: "string"},
         {inputs: ["cpu"], output: "unmapped.cpu", type: "string"},
         {inputs: ["sysuptime"], output: "unmapped.sysuptime", type: "string"},
         {inputs: ["authproto"], output: "unmapped.authproto", type: "string"},
         {inputs: ["action"], output: "unmapped.action", type: "string"},
         {inputs: ["group"], output: "unmapped.group", type: "string"},
         {inputs: ["policyid"], output: "unmapped.policyid", type: "string"},
         {inputs: ["user"], output: "unmapped.user", type: "string"},
         {inputs: ["assignip"], output: "unmapped.assignip", type: "string"},
         {inputs: ["cookies"], output: "unmapped.cookies", type: "string"},
         {inputs: ["locip"], output: "unmapped.locip", type: "string"},
         {inputs: ["locport"], output: "unmapped.locport", type: "string"},
         {inputs: ["outintf"], output: "unmapped.outintf", type: "string"},
         {inputs: ["peer_notif"], output: "unmapped.peer_notif", type: "string"},
         {inputs: ["remip"], output: "unmapped.remip", type: "string"},
         {inputs: ["remport"], output: "unmapped.remport", type: "string"},
         {inputs: ["useralt"], output: "unmapped.useralt", type: "string"},
         {inputs: ["vpntunnel"], output: "unmapped.vpntunnel", type: "string"},
         {inputs: ["xauthgroup"], output: "unmapped.xauthgroup", type: "string"},
         {inputs: ["xauthuser"], output: "unmapped.xauthuser", type: "string"},
         {inputs: ["name"], output: "unmapped.name", type: "string"},
         {inputs: ["cert-type"], output: "unmapped.cert-type", type: "string"},
         {inputs: ["age"], output: "unmapped.age", type: "string"},
         {inputs: ["apscan"], output: "unmapped.apscan", type: "string"},
         {inputs: ["apstatus"], output: "unmapped.apstatus", type: "string"},
         {inputs: ["aptype"], output: "unmapped.aptype", type: "string"},
         {inputs: ["bssid"], output: "unmapped.bssid", type: "string"},
         {inputs: ["channel"], output: "unmapped.channel", type: "string"},
         {inputs: ["detectionmethod"], output: "unmapped.detectionmethod", type: "string"},
         {inputs: ["encryption"], output: "unmapped.encryption", type: "string"},
         {inputs: ["live"], output: "unmapped.live", type: "string"},
         {inputs: ["manuf"], output: "unmapped.manuf", type: "string"},
         {inputs: ["noise"], output: "unmapped.noise", type: "string"},
         {inputs: ["onwire"], output: "unmapped.onwire", type: "string"},
         {inputs: ["radioband"], output: "unmapped.radioband", type: "string"},
         {inputs: ["radioidclosest"], output: "unmapped.radioidclosest", type: "string"},
         {inputs: ["radioiddetected"], output: "unmapped.radioiddetected", type: "string"},
         {inputs: ["rate"], output: "unmapped.rate", type: "string"},
         {inputs: ["security"], output: "unmapped.security", type: "string"},
         {inputs: ["signal"], output: "unmapped.signal", type: "string"},
         {inputs: ["snclosest"], output: "unmapped.snclosest", type: "string"},
         {inputs: ["sndetected"], output: "unmapped.sndetected", type: "string"},
         {inputs: ["ssid"], output: "unmapped.ssid", type: "string"},
         {inputs: ["stacount"], output: "unmapped.stacount", type: "string"},
         {inputs: ["stamac"], output: "unmapped.stamac", type: "string"},
         {inputs: ["userfrom"], output: "unmapped.userfrom", type: "string"},
         {inputs: ["operation"], output: "api.operation", type: "string"},
         {inputs: ["changes"], output: "unmapped.changes", type: "string"},
         {inputs: ["desc"], output: "unmapped.desc", type: "string"},
       ],
       drops: ["ocsf_time"],
       constants: [
         { value: 99, field: "activity_id"},
         { value: 99, field: "type_uid"},
         { value: 0, field: "class_uid"},
         { value: 0, field: "category_uid"},
         { value: "Base Event", field: "class_name"},
         { value: "Uncategorized", field: "category_name"},
         { value: "Base Event: Other", field: "type_name"},
         { value: 1, field: "severity_id", predicate: "unmapped.level = 'information'" },
         { value: 2, field: "severity_id", predicate: "unmapped.level = 'low'" },
         { value: 3, field: "severity_id", predicate: "unmapped.level = 'medium'" },
         { value: 4, field: "severity_id", predicate: "unmapped.level = 'high'" },
         { value: 5, field: "severity_id", predicate: "unmapped.level = 'critical'" },
         { value: 6, field: "severity_id", predicate: "unmapped.level = 'fatal'" },
       ]
     },
   ],
 }
}
