{
  attributes: {
    
  },
  patterns: {
   //maps to high_resolution_timestamp:
   //timestamp: "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}(\\+|-)\\d{2}:\\d{2}",
   //application_characteristic can be a single value, a comma delimited list in quotes, or blank. Null value is handled by format: traffic-2, not by this pattern.
   app_characteristic: "(\".*\")|[^,]+",
     tsPattern: "\\w+\\s+\\d+\\s+\\d+\\s+\\d+:\\d+:\\d+"
   //description field from system log is wrapped in quotes and may contain commas
   desc: "(\".*\")",
  },
  
  formats: [

    {
      //match all fields. application_characteristic can be a single value, or a comma delimited list in quotes. 
      attributes: { 
        "class_uid": "4001",
        "category_uid": "4",
        "severity_id": "0",
        "class_name": "Network Activity",
        "category_name": "Network Activity",
        "metadata.product.name": "Cisco ASA",
        "metadata.product.vendor_name": "Cisco",
        "dataSource.category": "security",
        "dataSource.name": "Cisco ASA",
        "dataSource.vendor": "Cisco",
       },
      //base ASA format
      format: "<$code$>$timestamp=tsPattern$: %ASA-$severity$-$Alert-Code$: $event.details$",
    },
    {
     format: ".*418001: Through-the-device packet to/from management-only network is denied: protocol $protocol$ src oobm:$src.ip.address$ dst oobm:$dst.ip.address$", 
    },
    {
     format: ".*710005:$proto$ request discarded from $src.ip.address$/$source.port$ to $interface.name$:$dst.ip.address$/$dst.port$", 
    },
    {
     format: ".*725011: Cipher\\[$order$\\] : $cipher.name$", 
    },
    {
     format: ".*302014: Teardown TCP connection $connetion.id$ for $src.interface$:$src.ip.address$/$src.port$ to $dst.interface$:$dst.ip.address$/$dst.port$ duration $duration$ bytes $bytes$ $session.end.reason$", 
    },
    {
     format: ".*302013: Built $direction$ TCP connection $connection.id$ for $src.interface$:$src.ip.address$/$src.port$ \\(.*\\) to $dst.interface$:$dst.ip.address$/$dst.port$ ", 
    },
    {
     format: ".*302020: Built $direction$ ICMP connection for faddr $foreign.ip.address$/$foreign.port$ gaddr $global.address$/$global.port$ laddr $local.address$/$local.port$ type $type$ code $code$", 
    },
    {
     format: ".*302021: Teardown ICMP Connection for faddr $foreign.address$/$foreign.port$ gaddr $global.address$/$global.port$ laddr $local.address$/$local.port$ type $type$ code $code$",     
    },
    {
     format: ".*106023: Deny $protocol$ src $src.interface$:$src.ip.address$ dst $dst.interface$:$dst.ip.address$ \\(type $type$, code $code$\\) by access-group \"$access.group$\"",     
    },
    {
     format: ".*710007: NAT-T keepalive received from $src.ip.address$/$src.port$ to $dst.interface$:$dst.ip.address$/$dst.port$",     
    },
    {
     format: ".*710006: $protocol$ request discarded from $src.ip.address$ to $dst.interface$:$dst.ip.address$",     
    },
    {
     format: ".*713257: Phase $phase$ $result$: Mismatched attribute types for class $mismatch.class$: Rcv\'d: $receiver.class$ Cfg\'d: $configure.class$",     
    },
    {
     format: ".*305011: Built $nat.type$ $protocol$ translation from $pre.nat.interface$:$pre.nat.ip.address$/$pre.nat.port$ to $post.nat.interface$:$post.nat.ip.address$/$post.nat.port$ duration $duration$",     
    },
    {
     format: ".*305012: Teardown $nat.type$ $protocol$ translation from $pre.nat.interface$:$pre.nat.ip.address$/$pre.nat.port$ to $post.nat.interface$:$post.nat.ip.address$/$post.nat.port$ duration $duration$",     
    },
    {
     format: ".*609001: Built local-host $zone.name$:$local.host.ip$",     
    },
    {
     format: ".*609002: Teardown local-host $zone.name$:$local.host.ip$ duration $duration$",     
    },
    {
     format: ".*302016: Teardown UDP connection $connection.id$ for $src.interface$:$src.ip.address$/$src.port$ to $dst.interface$:$dst.ip.address$/$dst.port$ duration $duration$ bytes $bytes$",     
    },
    {
     format: ".*302015: Built $direction$ UDP connection $connection.id$ for $src.interface$:$src.ip.address$/$src.port$ to $dst.interface$:$dst.ip.address$/$dst.port$",     
    },
    {
     format: ".*715046: Group = $group.name$, Username = $username$, IP = $ip$, $payload.description$",     
    },
    {
     format: ".*715046: Group = $group.name$, IP = $ip$, $payload.description$",     
    },
    {
     format: ".*113004: AAA user $aaa.type$ Successful : server = $dst.ip.address$ : user = $src.user$"
    },
    {
     format: ".*106015: Deny TCP (no connection) from $src.ip.address$/$src.port$ to $dst.ip.address$/$dst.port$ flags $flags$ on interface $interface.name$"
    },
    {
     format: ".*715047: IP = $src.ip.address$, process $payload.type$ payload"
    },
    {
     format: ".*611101: User Authentication succeeded: IP address: $ip.address$, Uname: $username$"
    },
    {
     format: ".*111009: User \'$username$\' executed cmd: $command$"
    },
    {
     format: ".*713236: IP = $src.ip.address$, IKE_DECODE $direction$ Message \\(msgid=$message.id$\\) with payloads : $ike.decode.payloads$total length: $total.length$"
    },
    {
     format: ".*710005: $protocol$ request discarded from $src.ip.address$/$src.port$ to $dst.interface$:$dst.ip.address$/$dst.port$"
    },
    {
     format: ".*725011: Cipher\\[$cipher.order$\\] : $cipher.name$"
    },
    {
     format: ".*733100: \\[ $object$\\] drop rate$drop.rate.id$ exceeded. Current burst rate is $drops.per.second$ per second, max configured rate is $drop.rate.threshold$; Current average rate is $average.drop.rate$ per second, max configured rate is $max.drop.rate$; Cumulative total count is $cumulative.drop.count$"
    },
    {
     format: ".*725001: Starting SSL handshake with peer-type $src.interface$:$src.ip.address$/$src.port$ to $dst.ip.address$/$dst.port$ for $protocol-version$ session"
    },
    {
     format: ".*725010: Device supports the following $supported.cipher.count$ cipher"
    },
    {
     format: ".*725008: SSL $ssl.peer.type$ $src.interface$:$src.ip.address$/$src.port$ to $dst.ip.address$/$dst.port$ proposes the following $suggested.cipher.count$ cipher"
    },
     {
     format: ".*725012: Device chooses cipher $chosen.cipher$ for the SSL session with $peer.type$ $src.interface$:$src.ip.address$/$src.port$ to $dst.ip.address$/$dst.port$"
    },
     {
     format: ".*725016: Device selects trust-port $trust.point$ for $peer-type$ $src.interface$:$src.ip.address$/$src.port$ to $dst.ip.address$/$dst.port$"
    },
     {
     format: ".*710003: $protocol$ access denied by ACL from $src.ip.address$/$src.port$ to $dst.interface$:$dst.ip.address$/$dst.port$"
    },
     {
     format: ".*725007: SSL session with client $src.interface$:$src.ip.address$/$src.port$ to $dst.ip.address$/$dst.port$ terminated"
    },
    {
     format: ".*725002: Device completed SSL handshake with $peer.type$ $src.interface$:$src.ip.address$/$src.port$ to $dst.ip.address$/$dst.port$ for $protocol.version$ session"
    },
     {
     format: ".*419002: Duplicate TCP SYN from $src.interface$:$src.ip.address$/$src.port$ to $dst.interface$:$dst.ip.address$/$dst.port$ with different initial sequence number"
    },
    {
     format: ".*715049: IP = $ip$, Received $vid.type$"
    },
     {
     format: ".*113008: AAA transaction status $aaa.transaction.status$ : user = $username$"
    },
    {
     format: ".*315011: SSH session from $src.ip.address$ on interface $dst.interface$ for user \"$user$\" disconnected by SSH server, reason: $ssh.disconnect.reason$"
    },
    {
     format: ".*111008: User \'$user$\' executed the \'$command.string$\' command."
    },
    {
     format: ".*111010: User \'$user$\', running \'$application.name$\' from IP $src.ip$, executed \'$command.string$\'"
    },
    {
     format: ".*605005: Login permitted from $src.ip.address$/$src.port$ to $dst.interface$:$dst.ip.address$/$service$ for user \"$username$\""
    },
    {
     format: ".*710002: $protocol$ access permitted from $src.ip.address$/$src.port$ to $dst.interface$:$dst.ip.address$/$service$"
    },
    {
     format: ".*713221: Group = $group$, Username = $username$, IP = $ip$, Static Crypto Map check, checking map = $crypto.map.tag$, seq = $sequence.number$"
    },
    {
     format: ".*313004: Denied ICMP type=$icmp.type$, from laddr $local.address$ on interface $dst.interface$ to $dst.ip.address$: no matching session"
    },
    {
     format: ".*113014: AAA authentication server not accessible : server =  $aaa.server$ : user = $user$"
    },
    {
     format: ".*113022: AAA Marking RADIUS server $aaa.server$ in aaa-server group $aaa.server.group$ as FAILED"
    },
    {
     format: ".*715076: Group = $group$, IP = $ip$, Computing hash for ISAKMP"
    },
    {
     format: ".*715048: Group = $group$, IP = $ip$, Send $vid.type$ $VID$ VID"
    },
    {
     format: ".*720041: \\($vpn.unit$\\) Sending $vpn.message.type$ \\($vpn.message$\\) to $active.standby$ unit"
    },
    {
     format: ".*715028: Group = $group$, IP = $ip$, IKS SA Proposal #1, Transform # $chosen.transform$ acceptable Matches global IKE entry # $global.ike.entry.number$"
    },
    {
     format: ".*: Group = $group$, IP = $ip$, "
    },
    
    
        ]
  
}
